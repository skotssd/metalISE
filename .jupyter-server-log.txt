[I 19:29:10.710 NotebookApp] Writing notebook server cookie secret to /home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret
[I 19:29:10.711 NotebookApp] Authentication of /metrics is OFF, since other authentication is disabled.
[W 19:29:11.146 NotebookApp] All authentication is disabled.  Anyone who can connect to this server will be able to run code.
[W 2023-08-02 19:29:12.150 LabApp] 'ip' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2023-08-02 19:29:12.151 LabApp] 'token' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2023-08-02 19:29:12.151 LabApp] 'password' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2023-08-02 19:29:12.151 LabApp] 'password' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[I 2023-08-02 19:29:12.164 LabApp] JupyterLab extension loaded from /srv/conda/envs/notebook/lib/python3.7/site-packages/jupyterlab
[I 2023-08-02 19:29:12.165 LabApp] JupyterLab application directory is /srv/conda/envs/notebook/share/jupyter/lab
[I 19:29:12.176 NotebookApp] nteract extension loaded from /srv/conda/envs/notebook/lib/python3.7/site-packages/nteract_on_jupyter
[I 19:29:12.180 NotebookApp] Serving notebooks from local directory: /home/jovyan
[I 19:29:12.180 NotebookApp] Jupyter Notebook 6.4.12 is running at:
[I 19:29:12.180 NotebookApp] http://ec43c0bfdd1c:8888/
[I 19:29:12.180 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[W 19:29:12.195 NotebookApp] No web browser found: could not locate runnable browser.
[I 19:30:21.999 NotebookApp] 301 GET /static/favicons/favicon.ico (172.24.0.1) 0.670000ms
[I 2023-08-02 19:30:25.686 LabApp] Build is up to date
[W 19:30:52.983 NotebookApp] Collisions detected in /home/jovyan/.jupyter/jupyter_notebook_config.py and /home/jovyan/.jupyter/jupyter_notebook_config.json config files. /home/jovyan/.jupyter/jupyter_notebook_config.json has higher priority: {
      "NotebookApp": {
        "password": "'' ignored, using 'argon2:$argon2id$v=19$m=10240,t=10,p=8$ZmkKwBPY7SHyhu/M4lUPdg$tdk6jy8Z9Fj2eCjHXTJCGDWY8OT4vNNruv21gO7uNc8'"
      }
    }
[W 2023-08-02 19:30:54.136 LabApp] 'ip' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2023-08-02 19:30:54.137 LabApp] 'token' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2023-08-02 19:30:54.137 LabApp] 'password' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[W 2023-08-02 19:30:54.137 LabApp] 'password' has moved from NotebookApp to ServerApp. This config will be passed to ServerApp. Be sure to update your config before our next release.
[I 2023-08-02 19:30:54.151 LabApp] JupyterLab extension loaded from /srv/conda/envs/notebook/lib/python3.7/site-packages/jupyterlab
[I 2023-08-02 19:30:54.151 LabApp] JupyterLab application directory is /srv/conda/envs/notebook/share/jupyter/lab
[I 19:30:54.161 NotebookApp] nteract extension loaded from /srv/conda/envs/notebook/lib/python3.7/site-packages/nteract_on_jupyter
[I 19:30:54.165 NotebookApp] Serving notebooks from local directory: /home/jovyan
[I 19:30:54.165 NotebookApp] Jupyter Notebook 6.4.12 is running at:
[I 19:30:54.165 NotebookApp] http://ec43c0bfdd1c:8888/
[I 19:30:54.165 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[W 19:30:54.180 NotebookApp] No web browser found: could not locate runnable browser.
[W 19:30:55.116 NotebookApp] wrote error: 'Forbidden'
[W 19:30:55.117 NotebookApp] 403 GET /api/metrics/v1?1691004655115 (172.24.0.1) 1.980000ms referer=https://jupyter6.clearnasdss.synology.me/lab
[I 19:30:56.841 NotebookApp] 302 GET /lab (172.24.0.1) 1.170000ms
[W 19:30:56.963 NotebookApp] Forbidden
[W 19:30:56.963 NotebookApp] 403 GET /api/contents?content=1&1691004656961 (172.24.0.1) 1.520000ms referer=https://jupyter6.clearnasdss.synology.me/lab
[I 19:31:02.258 NotebookApp] 302 POST /login?next=%2Flab (172.24.0.1) 156.290000ms
[I 2023-08-02 19:31:05.757 LabApp] Build is up to date
[I 19:31:08.805 NotebookApp] Writing notebook-signing key to /home/jovyan/.local/share/jupyter/notebook_secret
[W 19:31:08.808 NotebookApp] Notebook KNO3_pH9pt5_1uMCuT.ipynb is not trusted
[I 19:31:09.057 NotebookApp] Kernel started: 796ba640-abe1-49e7-a4ab-c2536ef9ec41, name: xoctave
Serving notebooks from local directory: /home/jovyan
1 active kernel
Jupyter Notebook 6.4.12 is running at:
http://ec43c0bfdd1c:8888/
OpenGL vendor: VMware, Inc.
OpenGL renderer: llvmpipe (LLVM 10.0.0, 128 bits)
OpenGL version: 3.1 Mesa 20.0.8
Run with XEUS 3.0.5
[I 19:31:09.862 NotebookApp] 301 GET /static/favicons/favicon-busy-1.ico (172.24.0.1) 3.750000ms
[W 19:31:09.868 NotebookApp] Got events for closed stream <zmq.eventloop.zmqstream.ZMQStream object at 0x7f38a9903690>
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
%2	47	167	50	2	91	-0.08
%2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 19:33:08.965 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
[W 19:44:59.699 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT.ipynb?1691005499700 (172.24.0.1): file or directory does not exist: 'KNO3_pH8_0pt1uMCuT.ipynb'
[W 19:44:59.699 NotebookApp] file or directory does not exist: 'KNO3_pH8_0pt1uMCuT.ipynb'
[W 19:44:59.700 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT.ipynb?1691005499700 (172.24.0.1) 1.880000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH9pt5_1uMCuT.ipynb
[W 19:44:59.719 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT.ipynb?content=0&1691005499721 (172.24.0.1): file or directory does not exist: 'KNO3_pH8_0pt1uMCuT.ipynb'
[W 19:44:59.719 NotebookApp] file or directory does not exist: 'KNO3_pH8_0pt1uMCuT.ipynb'
[W 19:44:59.720 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT.ipynb?content=0&1691005499721 (172.24.0.1) 1.590000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH9pt5_1uMCuT.ipynb
[I 19:44:59.832 NotebookApp] Uploading file to /KNO3_pH8_0pt1uMCuT.ipynb
[I 19:46:59.885 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

list
string: -25
list
string: -20
list
string: -15
list
string: -10
list
string: -5
list
string: 0
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.2085 50 0.633641 35.7873

list
string: Total Cu
 -7.08802 40 0.576037 26.2927

[I 19:48:59.929 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
%4	35	275	0	2.001	115.1	0.2
%4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.0438 50 0.304147 35.7873

list
string: Total Cu
 -6.93825 40 0.276498 26.2927

[I 19:50:59.977 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
%4	35	275	0	2.001	115.1	0.2
%4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.0438 50 0.304147 35.7873

list
string: Total Cu
 -6.93825 40 0.276498 26.2927

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 0 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 20
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.0185 50 0.253456 21.4724

list
string: Total Cu
 -6.91521 40 0.230415 15.7756

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.0185 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 40 0.230415 11.5688

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,20,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.0185 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 20 0.230415 11.5688

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.0185 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

[I 19:52:49.879 NotebookApp] Kernel started: 501c1611-0792-428b-aec5-598ef5cf05cd, name: xoctave
OpenGL vendor: VMware, Inc.
OpenGL renderer: llvmpipe (LLVM 10.0.0, 128 bits)
OpenGL version: 3.1 Mesa 20.0.8
Run with XEUS 3.0.5
[I 19:53:00.028 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
%2	15	135	0	2.002	74.8	0.04
%2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
%2	47	167	50	2	91	-0.08
%2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
%2	15	135	0	2.002	74.8	0.04
%2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
2	47	167	50	2	91	-0.08
2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -150
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 42.9448

list
string: Total Cu
 -5.91521 40 0.230415 31.5513

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
%2	47	167	50	2	91	-0.08
%2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 19:54:49.772 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
[I 19:56:49.816 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
%2	47	167	50	2	91	-0.08
%2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 19:57:13.352 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
[W 19:57:26.789 NotebookApp] 404 GET /api/contents/KNO3_pH10_0pt1uMCuT.ipynb?1691006246792 (172.24.0.1): file or directory does not exist: 'KNO3_pH10_0pt1uMCuT.ipynb'
[W 19:57:26.790 NotebookApp] file or directory does not exist: 'KNO3_pH10_0pt1uMCuT.ipynb'
[W 19:57:26.791 NotebookApp] 404 GET /api/contents/KNO3_pH10_0pt1uMCuT.ipynb?1691006246792 (172.24.0.1) 2.950000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH8_0pt1uMCuT.ipynb
[W 19:57:26.811 NotebookApp] 404 GET /api/contents/KNO3_pH10_0pt1uMCuT.ipynb?content=0&1691006246814 (172.24.0.1): file or directory does not exist: 'KNO3_pH10_0pt1uMCuT.ipynb'
[W 19:57:26.812 NotebookApp] file or directory does not exist: 'KNO3_pH10_0pt1uMCuT.ipynb'
[W 19:57:26.813 NotebookApp] 404 GET /api/contents/KNO3_pH10_0pt1uMCuT.ipynb?content=0&1691006246814 (172.24.0.1) 2.940000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH8_0pt1uMCuT.ipynb
[I 19:57:26.821 NotebookApp] Uploading file to /KNO3_pH10_0pt1uMCuT.ipynb
[I 19:58:08.451 NotebookApp] Kernel started: 7c3981ad-5a7c-4d29-a312-81b6a13e5d7a, name: xoctave
OpenGL vendor: VMware, Inc.
OpenGL renderer: llvmpipe (LLVM 10.0.0, 128 bits)
OpenGL version: 3.1 Mesa 20.0.8
Run with XEUS 3.0.5
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
%4	35	275	0	2.001	115.1	0.2
%4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

[I 19:59:26.874 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
[I 20:00:08.339 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
%4	35	275	0	2.001	115.1	0.2
%4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
%5	45	345	50	1.995	119.6	0.1
%5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
%5	45	345	50	1.995	119.6	0.1
%5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

[I 20:20:08.458 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
%4	35	275	0	2.001	115.1	0.2
%4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % try one point, assume Nernst slope

Eo=115-(59.2/2)*log10(CuTmeas)
[I 20:22:08.498 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
[I 20:24:08.546 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(E-Eo)/m
Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
[I 20:26:08.586 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ko','markerfillcolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
%4	35	275	0	2.001	115.1	0.2
%4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ko','markerfillcolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

[I 20:28:08.632 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ko','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

[I 20:30:08.674 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
[I 20:39:27.080 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
%1	5	65	0	9.697	-17	0.14
%1	10	70	0	9.709	-17.3	-0.0600000000000001
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.0185 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.0185 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.7030; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8513 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.7030; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 40 150])

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.7030; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 20:41:27.127 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
%2	53	173	0	2.002	95.6	0.0399999999999977
%2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.7030; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.7030; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 20:43:18.546 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
[I 20:43:27.170 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 20:45:18.592 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 20:47:18.635 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

[I 20:48:09.003 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

[I 20:50:09.043 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
%2	47	167	50	2	91	-0.08
%2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
%2	47	167	50	2	91	-0.08
%2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 20:51:18.692 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.7030; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.7030; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

%plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 20:53:27.249 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 20:55:27.295 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
%2	47	167	50	2	91	-0.08
%2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; %m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 20:57:18.751 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
[I 20:57:27.341 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
%2	47	167	50	2	91	-0.08
%2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 20:58:09.106 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
[I 20:59:18.796 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
[I 20:59:27.379 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 21:01:27.419 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-1.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -16.8769 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-11.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -9.25022 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-13.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -9.25022 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 21:03:27.464 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5; m=24.254;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 21:05:19.712 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5; m=24.254; m=param(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5; m=24.254; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5;  m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

[I 21:07:19.760 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5;  m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-13 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.12544 50 0.253456 15.7464

list
string: Total Cu
 -6.91521 60 0.230415 11.5688

[I 21:08:09.175 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5; m=24.254; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:09:19.799 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5;  m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5;  m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:10:09.224 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5;  
%m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; %m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:12:09.267 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
%2	47	167	50	2	91	-0.08
%2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 21:13:18.880 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
2	47	167	50	2	91	-0.08
2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
2	47	167	50	2	91	-0.08
2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
paramlinear=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
2	47	167	50	2	91	-0.08
2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
paramlinear=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 21:15:18.923 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:17:18.968 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.16346 50 0.329493 15.7464

list
string: Total Cu
 -5.94977 60 0.299539 11.5688

[I 21:18:09.315 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cuall)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cuall)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:20:09.356 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
2	47	167	50	2	91	-0.08
2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus),Emeas,1)
paramlinear=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	17	77	0	2.009	78.1	13.6285714285714
%1	23	83	0	2.000	73.8	-0.716666666666666
%1	28	88	0	1.999	76	0.440000000000001
%1	33	93	0	1.999	77.8	0.359999999999999
%1	38	98	0	1.995	79.4	0.320000000000002
%1	43	103	0	1.996	81.8	0.479999999999998
%1	48	108	0	1.995	84	0.440000000000001
%1	53	113	0	2.005	86	0.4
%1	58	118	0	2.006	87.7	0.340000000000001
%2	3	123	0	2.008	89.8	0.419999999999999
%2	8	128	0	2.009	90.4	0.120000000000002
%2	13	133	0	2.006	91	0.119999999999999
%2	18	138	0	2.006	91.7	0.140000000000001
%2	23	143	0	2.005	92.3	0.119999999999999
%2	28	148	0	2.004	92.4	0.0200000000000017
%2	33	153	0	2.007	93.4	0.2
%2	38	158	0	2.003	93.9	0.1
%2	43	163	0	2.002	95	0.219999999999999
%2	48	168	0	2.001	95.4	0.0800000000000011
2	53	173	0	2.002	95.6	0.0399999999999977
2	58	178	0	2.001	95.6	0
%3	0	180	50	2.001	97.9	1.15000000000001
%3	5	185	50	2	102.8	0.979999999999998
%3	10	190	50	2	103.8	0.2
%3	22	202	50	1.998	105.2	0.116666666666667
%3	32	212	50	1.997	106.2	0.1
%3	37	217	50	1.996	107	0.159999999999999
%3	42	222	50	1.995	106.6	-0.0800000000000011
%3	47	227	50	1.995	107.2	0.120000000000002
%3	52	232	50	1.995	107.6	0.0799999999999983
%3	57	237	50	1.996	107.3	-0.0599999999999994
%4	2	242	50	2.021	108.5	0.240000000000001
%4	7	247	50	2.021	108.7	0.0400000000000006
4	12	252	50	2.021	108.3	-0.0800000000000011
4	17	257	50	2.021	108.8	0.1
%4	19	259	150	2.02	110	0.600000000000001
%4	24	264	150	2.021	115.7	1.14
%4	29	269	150	2.02	117	0.259999999999999
%4	34	274	150	2.02	115.5	-0.3
%4	39	279	150	2.02	116.3	0.159999999999999
%4	44	284	150	2.019	117.3	0.2
%4	49	289	150	2.019	116.8	-0.1
%4	54	294	150	2.019	118.5	0.340000000000001
%4	59	299	150	2.019	118	-0.1
5	4	304	150	2.019	118.1	0.0199999999999989
5	14	314	150	2.018	118.4	0.0300000000000011
%5	15	315	400	2.02	121.6	3.19999999999999
%5	20	320	400	2.019	125.8	0.840000000000001
%5	25	325	400	2.019	127.5	0.340000000000001
%5	30	330	400	2.019	126.4	-0.219999999999999
%5	35	335	400	2.019	127.8	0.279999999999998
5	40	340	400	2.019	127.6	-0.0400000000000006
5	45	345	400	2.019	127.4	-0.0399999999999977
%5	46	346	900	2.022	129.9	2.5
%5	51	351	900	2.022	135.3	1.08
%5	56	356	900	2.022	135.9	0.119999999999999
%6	1	361	900	2.022	136.8	0.180000000000001
%6	6	366	900	2.023	137.1	0.0599999999999966
6	11	371	900	2.022	137.4	0.0600000000000023
6	16	376	900	2.023	137.3	-0.0199999999999989
%6	17	377	1900	2.029	142	4.69999999999999
%6	22	382	1900	2.029	144.5	0.5
%6	27	387	1900	2.029	144.8	0.0600000000000023
%6	32	392	1900	2.028	145.2	0.0799999999999955
%6	37	397	1900	2.028	146.3	0.220000000000005
%6	42	402	1900	2.028	146.7	0.0799999999999955
%6	47	407	1900	2.028	147.4	0.140000000000003
6	52	412	1900	2.028	147.2	-0.0400000000000034
6	58	418	1900	2.028	145.9	-0.216666666666664
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	10	-29.6	
%0	5	5	0	9.928	-26.9	0.540000000000001
%0	15	15	0	9.866	-23.2	0.37
%0	20	20	0	9.855	-23.3	-0.0200000000000003
%0	25	25	0	9.804	-19.7	0.72
%0	30	30	0	9.791	-20.4	-0.14
%0	35	35	0	9.782	-19.8	0.12
%0	40	40	0	9.755	-19.3	0.1
%50	45	45	0	9.741	-17.4	0.38
%0	55	55	0	9.746	-17.4	0
%1	0	60	0	9.729	-17.7	-0.0600000000000001
1	5	65	0	9.697	-17	0.14
1	10	70	0	9.709	-17.3	-0.0600000000000001
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5; m=24.254; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -12.8893 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 21:35:44.970 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
[I 21:35:44.999 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(4:end)),Emeas(4:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:38:09.969 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
2	47	167	50	2	91	-0.08
2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -150
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 42.9448

list
string: Total Cu
 -5.91521 40 0.230415 31.5513

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
2	47	167	50	2	91	-0.08
2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
paramlinear=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 21:39:45.041 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
[W 22:49:49.735 NotebookApp] 404 GET /api/contents/KNO3_pH6_0pt1uMCuT.ipynb?1691016589738 (172.24.0.1): file or directory does not exist: 'KNO3_pH6_0pt1uMCuT.ipynb'
[W 22:49:49.735 NotebookApp] file or directory does not exist: 'KNO3_pH6_0pt1uMCuT.ipynb'
[W 22:49:49.735 NotebookApp] 404 GET /api/contents/KNO3_pH6_0pt1uMCuT.ipynb?1691016589738 (172.24.0.1) 1.790000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH10_0pt1uMCuT.ipynb
[W 22:49:49.758 NotebookApp] 404 GET /api/contents/KNO3_pH6_0pt1uMCuT.ipynb?content=0&1691016589763 (172.24.0.1): file or directory does not exist: 'KNO3_pH6_0pt1uMCuT.ipynb'
[W 22:49:49.759 NotebookApp] file or directory does not exist: 'KNO3_pH6_0pt1uMCuT.ipynb'
[W 22:49:49.760 NotebookApp] 404 GET /api/contents/KNO3_pH6_0pt1uMCuT.ipynb?content=0&1691016589763 (172.24.0.1) 2.140000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH10_0pt1uMCuT.ipynb
[I 22:49:49.769 NotebookApp] Uploading file to /KNO3_pH6_0pt1uMCuT.ipynb
Executing: % put in data
data=[...
time hr	time min	time total	cumulative  vol added	pH	mvA	delta
0	0	0	0	5.992	49.4	
0	5	5	0	6.002	55.7	1.26
0	10	10	0	6.018	59.4	0.739999999999999
0	15	15	0	6.033	62.5	0.62
0	20	20	0	6.046	62.6	0.0200000000000003
0	25	25	0	6.064	65.4	0.560000000000001
0	30	30	0	6.054	73	1.52
1	0	60	0	6.077	70.1	-0.0966666666666669
1	5	65	0	6.042	67.4	-0.539999999999998
1	10	70	0	6.064	69.9	0.5
1	15	75	0	6.077	69.9	0
1	20	80	0	6.091	68.8	-0.220000000000002
1	25	85	0	6.019	67.3	-0.3
1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
1	45	105	0	2.086	75.5	1.62
1	50	110	0	2.045	76.3	0.159999999999999
1	55	115	0	2.04	79	0.540000000000001
2	0	120	0	2.041	79.2	0.0400000000000006
2	5	125	0	2.039	80.4	0.240000000000001
2	10	130	0	2.04	82.2	0.359999999999999
2	15	135	0	2.04	81.7	-0.1
2	20	140	0	2.038	84	0.459999999999999
2	25	145	0	2.037	82.9	-0.219999999999999
2	30	150	0	2.037	83.5	0.119999999999999
2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
3	5	185	50	2.037	87.3	0.540000000000001
3	8	188	50	2.036	91.2	1.3
3	13	193	50	2.037	92.3	0.219999999999999
3	18	198	50	2.032	92.8	0.1
3	23	203	50	2.036	93.7	0.180000000000001
3	28	208	50	2.035	93.3	-0.0800000000000011
3	33	213	50	2.036	93.9	0.120000000000002
3	38	218	50	2.037	95.4	0.3
3	43	223	50	2.035	95.3	-0.0200000000000017
3	48	228	50	2.035	96.3	0.2
3	53	233	50	2.033	98.2	0.380000000000001
3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
4	10	250	150	2.036	100.5	0.950000000000003
4	15	255	150	2.034	105.2	0.940000000000001
4	20	260	150	2.036	105.6	0.0799999999999983
4	25	265	150	2.034	107	0.280000000000001
4	30	270	150	2.034	108	0.2
4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
4	50	290	400	2.031	115	1.46
4	55	295	400	2.031	115.9	0.180000000000001
5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
5	15	315	900	2.034	124.8	1.76
5	20	320	900	2.037	125.3	0.1
5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
6	0	360	3400	2.05	140.8	1.32
6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
time hr	time min	time total	cumulative  vol added	pH	mvA	delta
0	0	0	0	5.992	49.4	
0	5	5	0	6.002	55.7	1.26
0	10	10	0	6.018	59.4	0.739999999999999
0	15	15	0	6.033	62.5	0.62
0	20	20	0	6.046	62.6	0.0200000000000003
0	25	25	0	6.064	65.4	0.560000000000001
0	30	30	0	6.054	73	1.52
1	0	60	0	6.077	70.1	-0.0966666666666669
1	5	65	0	6.042	67.4	-0.539999999999998
1	10	70	0	6.064	69.9	0.5
1	15	75	0	6.077	69.9	0
1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
[I 22:51:49.826 NotebookApp] Saving file at /KNO3_pH6_0pt1uMCuT.ipynb
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
1	45	105	0	2.086	75.5	1.62
1	50	110	0	2.045	76.3	0.159999999999999
1	55	115	0	2.04	79	0.540000000000001
2	0	120	0	2.041	79.2	0.0400000000000006
2	5	125	0	2.039	80.4	0.240000000000001
2	10	130	0	2.04	82.2	0.359999999999999
2	15	135	0	2.04	81.7	-0.1
2	20	140	0	2.038	84	0.459999999999999
2	25	145	0	2.037	82.9	-0.219999999999999
%2	30	150	0	2.037	83.5	0.119999999999999
%2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
3	5	185	50	2.037	87.3	0.540000000000001
3	8	188	50	2.036	91.2	1.3
3	13	193	50	2.037	92.3	0.219999999999999
3	18	198	50	2.032	92.8	0.1
3	23	203	50	2.036	93.7	0.180000000000001
3	28	208	50	2.035	93.3	-0.0800000000000011
3	33	213	50	2.036	93.9	0.120000000000002
3	38	218	50	2.037	95.4	0.3
3	43	223	50	2.035	95.3	-0.0200000000000017
3	48	228	50	2.035	96.3	0.2
3	53	233	50	2.033	98.2	0.380000000000001
3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
4	10	250	150	2.036	100.5	0.950000000000003
4	15	255	150	2.034	105.2	0.940000000000001
4	20	260	150	2.036	105.6	0.0799999999999983
4	25	265	150	2.034	107	0.280000000000001
4	30	270	150	2.034	108	0.2
4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
4	50	290	400	2.031	115	1.46
4	55	295	400	2.031	115.9	0.180000000000001
5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
5	15	315	900	2.034	124.8	1.76
5	20	320	900	2.037	125.3	0.1
5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
6	0	360	3400	2.05	140.8	1.32
6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	5.992	49.4	
%0	5	5	0	6.002	55.7	1.26
%0	10	10	0	6.018	59.4	0.739999999999999
%0	15	15	0	6.033	62.5	0.62
%0	20	20	0	6.046	62.6	0.0200000000000003
%0	25	25	0	6.064	65.4	0.560000000000001
%0	30	30	0	6.054	73	1.52
%1	0	60	0	6.077	70.1	-0.0966666666666669
%1	5	65	0	6.042	67.4	-0.539999999999998
%1	10	70	0	6.064	69.9	0.5
%1	15	75	0	6.077	69.9	0
%1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	45	105	0	2.086	75.5	1.62
%1	50	110	0	2.045	76.3	0.159999999999999
%1	55	115	0	2.04	79	0.540000000000001
%2	0	120	0	2.041	79.2	0.0400000000000006
%2	5	125	0	2.039	80.4	0.240000000000001
%2	10	130	0	2.04	82.2	0.359999999999999
%2	15	135	0	2.04	81.7	-0.1
%2	20	140	0	2.038	84	0.459999999999999
%2	25	145	0	2.037	82.9	-0.219999999999999
%2	30	150	0	2.037	83.5	0.119999999999999
%2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
%3	5	185	50	2.037	87.3	0.540000000000001
%3	8	188	50	2.036	91.2	1.3
%3	13	193	50	2.037	92.3	0.219999999999999
%3	18	198	50	2.032	92.8	0.1
%3	23	203	50	2.036	93.7	0.180000000000001
%3	28	208	50	2.035	93.3	-0.0800000000000011
%3	33	213	50	2.036	93.9	0.120000000000002
%3	38	218	50	2.037	95.4	0.3
%3	43	223	50	2.035	95.3	-0.0200000000000017
%3	48	228	50	2.035	96.3	0.2
%3	53	233	50	2.033	98.2	0.380000000000001
%3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
%4	10	250	150	2.036	100.5	0.950000000000003
%4	15	255	150	2.034	105.2	0.940000000000001
%4	20	260	150	2.036	105.6	0.0799999999999983
%4	25	265	150	2.034	107	0.280000000000001
%4	30	270	150	2.034	108	0.2
%4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
%4	50	290	400	2.031	115	1.46
%4	55	295	400	2.031	115.9	0.180000000000001
%5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
%5	15	315	900	2.034	124.8	1.76
%5	20	320	900	2.037	125.3	0.1
%5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
%5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
%6	0	360	3400	2.05	140.8	1.32
%6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	5.992	49.4	
%0	5	5	0	6.002	55.7	1.26
%0	10	10	0	6.018	59.4	0.739999999999999
%0	15	15	0	6.033	62.5	0.62
%0	20	20	0	6.046	62.6	0.0200000000000003
%0	25	25	0	6.064	65.4	0.560000000000001
%0	30	30	0	6.054	73	1.52
%1	0	60	0	6.077	70.1	-0.0966666666666669
%1	5	65	0	6.042	67.4	-0.539999999999998
%1	10	70	0	6.064	69.9	0.5
%1	15	75	0	6.077	69.9	0
%1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=95.6; Eorig=-17.3; m=21.5; m=24.254; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.08003 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 22:53:49.870 NotebookApp] Saving file at /KNO3_pH6_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	45	105	0	2.086	75.5	1.62
%1	50	110	0	2.045	76.3	0.159999999999999
%1	55	115	0	2.04	79	0.540000000000001
%2	0	120	0	2.041	79.2	0.0400000000000006
%2	5	125	0	2.039	80.4	0.240000000000001
%2	10	130	0	2.04	82.2	0.359999999999999
%2	15	135	0	2.04	81.7	-0.1
%2	20	140	0	2.038	84	0.459999999999999
%2	25	145	0	2.037	82.9	-0.219999999999999
%2	30	150	0	2.037	83.5	0.119999999999999
%2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
%3	5	185	50	2.037	87.3	0.540000000000001
%3	8	188	50	2.036	91.2	1.3
%3	13	193	50	2.037	92.3	0.219999999999999
%3	18	198	50	2.032	92.8	0.1
%3	23	203	50	2.036	93.7	0.180000000000001
%3	28	208	50	2.035	93.3	-0.0800000000000011
%3	33	213	50	2.036	93.9	0.120000000000002
%3	38	218	50	2.037	95.4	0.3
%3	43	223	50	2.035	95.3	-0.0200000000000017
%3	48	228	50	2.035	96.3	0.2
%3	53	233	50	2.033	98.2	0.380000000000001
%3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
%4	10	250	150	2.036	100.5	0.950000000000003
%4	15	255	150	2.034	105.2	0.940000000000001
%4	20	260	150	2.036	105.6	0.0799999999999983
%4	25	265	150	2.034	107	0.280000000000001
%4	30	270	150	2.034	108	0.2
%4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
%4	50	290	400	2.031	115	1.46
%4	55	295	400	2.031	115.9	0.180000000000001
%5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
%5	15	315	900	2.034	124.8	1.76
%5	20	320	900	2.037	125.3	0.1
%5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
%5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
%6	0	360	3400	2.05	140.8	1.32
%6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	5.992	49.4	
%0	5	5	0	6.002	55.7	1.26
%0	10	10	0	6.018	59.4	0.739999999999999
%0	15	15	0	6.033	62.5	0.62
%0	20	20	0	6.046	62.6	0.0200000000000003
%0	25	25	0	6.064	65.4	0.560000000000001
%0	30	30	0	6.054	73	1.52
%1	0	60	0	6.077	70.1	-0.0966666666666669
%1	5	65	0	6.042	67.4	-0.539999999999998
%1	10	70	0	6.064	69.9	0.5
%1	15	75	0	6.077	69.9	0
%1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=Emeas(1:2); Eorig=mVAoriginal; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.08003 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 22:55:49.917 NotebookApp] Saving file at /KNO3_pH6_0pt1uMCuT.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.08003 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	45	105	0	2.086	75.5	1.62
%1	50	110	0	2.045	76.3	0.159999999999999
%1	55	115	0	2.04	79	0.540000000000001
%2	0	120	0	2.041	79.2	0.0400000000000006
%2	5	125	0	2.039	80.4	0.240000000000001
%2	10	130	0	2.04	82.2	0.359999999999999
%2	15	135	0	2.04	81.7	-0.1
%2	20	140	0	2.038	84	0.459999999999999
%2	25	145	0	2.037	82.9	-0.219999999999999
%2	30	150	0	2.037	83.5	0.119999999999999
%2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
%3	5	185	50	2.037	87.3	0.540000000000001
%3	8	188	50	2.036	91.2	1.3
%3	13	193	50	2.037	92.3	0.219999999999999
%3	18	198	50	2.032	92.8	0.1
%3	23	203	50	2.036	93.7	0.180000000000001
%3	28	208	50	2.035	93.3	-0.0800000000000011
%3	33	213	50	2.036	93.9	0.120000000000002
%3	38	218	50	2.037	95.4	0.3
%3	43	223	50	2.035	95.3	-0.0200000000000017
%3	48	228	50	2.035	96.3	0.2
%3	53	233	50	2.033	98.2	0.380000000000001
%3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
%4	10	250	150	2.036	100.5	0.950000000000003
%4	15	255	150	2.034	105.2	0.940000000000001
%4	20	260	150	2.036	105.6	0.0799999999999983
%4	25	265	150	2.034	107	0.280000000000001
%4	30	270	150	2.034	108	0.2
%4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
%4	50	290	400	2.031	115	1.46
%4	55	295	400	2.031	115.9	0.180000000000001
%5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
%5	15	315	900	2.034	124.8	1.76
%5	20	320	900	2.037	125.3	0.1
%5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
%5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
%6	0	360	3400	2.05	140.8	1.32
%6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	5.992	49.4	
%0	5	5	0	6.002	55.7	1.26
%0	10	10	0	6.018	59.4	0.739999999999999
%0	15	15	0	6.033	62.5	0.62
%0	20	20	0	6.046	62.6	0.0200000000000003
%0	25	25	0	6.064	65.4	0.560000000000001
%0	30	30	0	6.054	73	1.52
%1	0	60	0	6.077	70.1	-0.0966666666666669
%1	5	65	0	6.042	67.4	-0.539999999999998
%1	10	70	0	6.064	69.9	0.5
%1	15	75	0	6.077	69.9	0
%1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mVAoriginal; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.08003 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	45	105	0	2.086	75.5	1.62
%1	50	110	0	2.045	76.3	0.159999999999999
%1	55	115	0	2.04	79	0.540000000000001
%2	0	120	0	2.041	79.2	0.0400000000000006
%2	5	125	0	2.039	80.4	0.240000000000001
%2	10	130	0	2.04	82.2	0.359999999999999
%2	15	135	0	2.04	81.7	-0.1
%2	20	140	0	2.038	84	0.459999999999999
%2	25	145	0	2.037	82.9	-0.219999999999999
%2	30	150	0	2.037	83.5	0.119999999999999
%2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
%3	5	185	50	2.037	87.3	0.540000000000001
%3	8	188	50	2.036	91.2	1.3
%3	13	193	50	2.037	92.3	0.219999999999999
%3	18	198	50	2.032	92.8	0.1
%3	23	203	50	2.036	93.7	0.180000000000001
%3	28	208	50	2.035	93.3	-0.0800000000000011
%3	33	213	50	2.036	93.9	0.120000000000002
%3	38	218	50	2.037	95.4	0.3
%3	43	223	50	2.035	95.3	-0.0200000000000017
%3	48	228	50	2.035	96.3	0.2
%3	53	233	50	2.033	98.2	0.380000000000001
%3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
%4	10	250	150	2.036	100.5	0.950000000000003
%4	15	255	150	2.034	105.2	0.940000000000001
%4	20	260	150	2.036	105.6	0.0799999999999983
%4	25	265	150	2.034	107	0.280000000000001
%4	30	270	150	2.034	108	0.2
%4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
%4	50	290	400	2.031	115	1.46
%4	55	295	400	2.031	115.9	0.180000000000001
%5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
%5	15	315	900	2.034	124.8	1.76
%5	20	320	900	2.037	125.3	0.1
%5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
%5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
%6	0	360	3400	2.05	140.8	1.32
%6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	5.992	49.4	
%0	5	5	0	6.002	55.7	1.26
%0	10	10	0	6.018	59.4	0.739999999999999
%0	15	15	0	6.033	62.5	0.62
%0	20	20	0	6.046	62.6	0.0200000000000003
%0	25	25	0	6.064	65.4	0.560000000000001
%0	30	30	0	6.054	73	1.52
%1	0	60	0	6.077	70.1	-0.0966666666666669
%1	5	65	0	6.042	67.4	-0.539999999999998
%1	10	70	0	6.064	69.9	0.5
%1	15	75	0	6.077	69.9	0
%1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.08003 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 22:57:49.966 NotebookApp] Saving file at /KNO3_pH6_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	45	105	0	2.086	75.5	1.62
%1	50	110	0	2.045	76.3	0.159999999999999
%1	55	115	0	2.04	79	0.540000000000001
%2	0	120	0	2.041	79.2	0.0400000000000006
%2	5	125	0	2.039	80.4	0.240000000000001
%2	10	130	0	2.04	82.2	0.359999999999999
%2	15	135	0	2.04	81.7	-0.1
%2	20	140	0	2.038	84	0.459999999999999
%2	25	145	0	2.037	82.9	-0.219999999999999
%2	30	150	0	2.037	83.5	0.119999999999999
%2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
%3	5	185	50	2.037	87.3	0.540000000000001
%3	8	188	50	2.036	91.2	1.3
%3	13	193	50	2.037	92.3	0.219999999999999
%3	18	198	50	2.032	92.8	0.1
%3	23	203	50	2.036	93.7	0.180000000000001
%3	28	208	50	2.035	93.3	-0.0800000000000011
%3	33	213	50	2.036	93.9	0.120000000000002
%3	38	218	50	2.037	95.4	0.3
%3	43	223	50	2.035	95.3	-0.0200000000000017
%3	48	228	50	2.035	96.3	0.2
%3	53	233	50	2.033	98.2	0.380000000000001
%3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
%4	10	250	150	2.036	100.5	0.950000000000003
%4	15	255	150	2.034	105.2	0.940000000000001
%4	20	260	150	2.036	105.6	0.0799999999999983
%4	25	265	150	2.034	107	0.280000000000001
%4	30	270	150	2.034	108	0.2
%4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
%4	50	290	400	2.031	115	1.46
%4	55	295	400	2.031	115.9	0.180000000000001
%5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
%5	15	315	900	2.034	124.8	1.76
%5	20	320	900	2.037	125.3	0.1
%5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
%5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
%6	0	360	3400	2.05	140.8	1.32
%6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	5.992	49.4	
%0	5	5	0	6.002	55.7	1.26
%0	10	10	0	6.018	59.4	0.739999999999999
%0	15	15	0	6.033	62.5	0.62
%0	20	20	0	6.046	62.6	0.0200000000000003
%0	25	25	0	6.064	65.4	0.560000000000001
%0	30	30	0	6.054	73	1.52
%1	0	60	0	6.077	70.1	-0.0966666666666669
%1	5	65	0	6.042	67.4	-0.539999999999998
%1	10	70	0	6.064	69.9	0.5
%1	15	75	0	6.077	69.9	0
%1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.08003 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 22:59:50.020 NotebookApp] Saving file at /KNO3_pH6_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	45	105	0	2.086	75.5	1.62
%1	50	110	0	2.045	76.3	0.159999999999999
%1	55	115	0	2.04	79	0.540000000000001
%2	0	120	0	2.041	79.2	0.0400000000000006
%2	5	125	0	2.039	80.4	0.240000000000001
%2	10	130	0	2.04	82.2	0.359999999999999
%2	15	135	0	2.04	81.7	-0.1
%2	20	140	0	2.038	84	0.459999999999999
%2	25	145	0	2.037	82.9	-0.219999999999999
%2	30	150	0	2.037	83.5	0.119999999999999
%2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
%3	5	185	50	2.037	87.3	0.540000000000001
%3	8	188	50	2.036	91.2	1.3
%3	13	193	50	2.037	92.3	0.219999999999999
%3	18	198	50	2.032	92.8	0.1
%3	23	203	50	2.036	93.7	0.180000000000001
%3	28	208	50	2.035	93.3	-0.0800000000000011
%3	33	213	50	2.036	93.9	0.120000000000002
%3	38	218	50	2.037	95.4	0.3
%3	43	223	50	2.035	95.3	-0.0200000000000017
%3	48	228	50	2.035	96.3	0.2
%3	53	233	50	2.033	98.2	0.380000000000001
%3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
%4	10	250	150	2.036	100.5	0.950000000000003
%4	15	255	150	2.034	105.2	0.940000000000001
%4	20	260	150	2.036	105.6	0.0799999999999983
%4	25	265	150	2.034	107	0.280000000000001
%4	30	270	150	2.034	108	0.2
%4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
%4	50	290	400	2.031	115	1.46
%4	55	295	400	2.031	115.9	0.180000000000001
%5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
%5	15	315	900	2.034	124.8	1.76
%5	20	320	900	2.037	125.3	0.1
%5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
%5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
%6	0	360	3400	2.05	140.8	1.32
%6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	5.992	49.4	
%0	5	5	0	6.002	55.7	1.26
%0	10	10	0	6.018	59.4	0.739999999999999
%0	15	15	0	6.033	62.5	0.62
%0	20	20	0	6.046	62.6	0.0200000000000003
%0	25	25	0	6.064	65.4	0.560000000000001
%0	30	30	0	6.054	73	1.52
%1	0	60	0	6.077	70.1	-0.0966666666666669
%1	5	65	0	6.042	67.4	-0.539999999999998
%1	10	70	0	6.064	69.9	0.5
%1	15	75	0	6.077	69.9	0
%1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.08003 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 23:01:50.067 NotebookApp] Saving file at /KNO3_pH6_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
2	47	167	50	2	91	-0.08
2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
paramlinear=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 23:03:45.400 NotebookApp] Saving file at /KNO3_pH9pt5_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	"cumulative vol added"	pH	mvA	delta
% 1	30	90	0	2.029	73.3	9.97
% 1	35	95	0	2.023	73.4	0.02
% 1	40	100	0	2.022	76.8	0.68
% 1	45	105	0	2.002	77.8	0.2
% 1	55	115	0	2.004	74.9	-0.29
% 2	5	125	0	2.002	74.5	-0.04
%2	10	130	0	2.002	74.6	0.02
2	15	135	0	2.002	74.8	0.04
2	17	137	0	2.002	79.3	2.25
% 2	22	142	50	2.002	90	2.14
% 2	27	147	50	2.001	93.5	0.7
% 2	32	152	50	2.002	96.3	0.56
% 2	37	157	50	2.001	95.8	-0.1
%2	42	162	50	2.002	91.4	-0.88
2	47	167	50	2	91	-0.08
2	52	172	50	2.001	90.6	-0.08
% 2	57	177	150	2.000	90.6	0
% 2	58	178	150	2.001	94.4	3.8
% 3	3	183	150	2.002	100	1.12
% 3	8	188	150	2	101.3	0.26
% 3	13	193	150	2.001	107.5	1.24
% 3	18	198	150	2	108.7	0.24
% 3	23	203	150	2.002	108.6	-0.02
%3	28	208	150	2.001	109	0.08
%3	33	213	150	2	108.8	-0.04
3	38	218	150	2.001	108.4	-0.08
% 3	43	223	400	1.999	108.4	0
% 3	44	224	400	2.001	114.1	5.7
% 3	49	229	400	2.003	118.4	0.86
% 3	54	234	400	2.001	118.2	-0.04
%3	59	239	400	2.002	118	-0.04
4	4	244	400	2.002	118.4	0.08
% 4	5	245	900	2.005	122.1	3.7
% 4	10	250	900	2.005	126.6	0.9
% 4	15	255	900	2.005	128	0.28
%4	20	260	900	2.005	128.5	0.1
%4	25	265	900	2.006	128.2	-0.06
4	30	270	900	2.004	127.8	-0.08
% 4	31	271	1900	2.011	133	5.2
% 4	36	276	1900	2.012	136.5	0.7
% 4	41	281	1900	2.011	137.2	0.14
% 4	46	286	1900	2.011	137.4	0.04
%4	51	291	1900	2.01	136.8	-0.12
4	56	296	1900	2.011	137.2	0.08
% 5	1	301	3400	2.011	136.8	-0.08
% 5	3	303	3400	2.02	142.5	2.85
% 5	8	308	3400	2.022	143.2	0.14
% 5	13	313	3400	2.021	143.4	0.04
% 5	18	318	3400	2.022	143.1	-0.06
% 5	23	323	3400	2.021	142	-0.22
% 5	28	328	3400	2.021	142.4	0.08
% 5	33	333	3400	2.021	142	-0.08
%5	38	338	3400	2.019	141.1	-0.18
5	43	343	3400	2.019	142.2	0.22
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative vol added	pH	mvA	delta	mVB	deltaB	comments
% 0	0	0	0	9.625	60.9	
% 0	5	5	0	9.657	47.3	-2.72
% 0	15	15	0	9.574	-34.7	-8.2
% 0	20	20	0	9.643	-33	0.34
% 0	25	25	0	9.256	-19	2.8
% 0	30	30	0	9.54	-29.6	-2.12
% 0	35	35	0	9.537	-28.8	0.16
% 0	40	40	0	9.54	-28.4	0.08
% 0	45	45	0	9.532	-27	0.28
% 0	50	50	0	9.527	-27.6	-0.12
% 0	55	55	0	9.517	-27.7	-0.02
% 1	0	60	0	9.512	-27.7	0
% 1	5	65	0	9.502	-26.2	0.3
%1	10	70	0	9.501	-26.3	-0.02
%1	15	75	0	9.486	-26.5	-0.04
1	20	80	0	9.482	-26.4	0.02
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[W 23:05:01.706 NotebookApp] 404 GET /api/contents/KNO3_pH6_1uMCuT.ipynb?1691017501700 (172.24.0.1): file or directory does not exist: 'KNO3_pH6_1uMCuT.ipynb'
[W 23:05:01.706 NotebookApp] file or directory does not exist: 'KNO3_pH6_1uMCuT.ipynb'
[W 23:05:01.707 NotebookApp] 404 GET /api/contents/KNO3_pH6_1uMCuT.ipynb?1691017501700 (172.24.0.1) 2.070000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH9pt5_1uMCuT.ipynb
[W 23:05:01.731 NotebookApp] 404 GET /api/contents/KNO3_pH6_1uMCuT.ipynb?content=0&1691017501726 (172.24.0.1): file or directory does not exist: 'KNO3_pH6_1uMCuT.ipynb'
[W 23:05:01.731 NotebookApp] file or directory does not exist: 'KNO3_pH6_1uMCuT.ipynb'
[W 23:05:01.732 NotebookApp] 404 GET /api/contents/KNO3_pH6_1uMCuT.ipynb?content=0&1691017501726 (172.24.0.1) 2.350000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH9pt5_1uMCuT.ipynb
[I 23:05:01.744 NotebookApp] Uploading file to /KNO3_pH6_1uMCuT.ipynb
[W 23:05:01.774 NotebookApp] 409 PATCH /api/contents/KNO3_pH6_1uMCuT.ipynb?1691017501768 (172.24.0.1): File already exists: KNO3_pH9pt5_1uMCuT.ipynb
[W 23:05:01.775 NotebookApp] File already exists: KNO3_pH9pt5_1uMCuT.ipynb
[W 23:05:01.775 NotebookApp] 409 PATCH /api/contents/KNO3_pH6_1uMCuT.ipynb?1691017501768 (172.24.0.1) 2.560000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH9pt5_1uMCuT.ipynb
[I 23:07:01.790 NotebookApp] Saving file at /KNO3_pH6_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	35	35	0	2.06	88.3	0.159999999999999
%0	40	40	0	2.053	88.3	0
%0	45	45	0	2.056	89.2	0.180000000000001
%0	50	50	0	2.055	88.9	-0.0599999999999994
%0	55	55	0	2.056	89.2	0.0599999999999994
1	0	60	0	2.056	91	0.359999999999999
1	18	78	0	2.056	87.5	-0.194444444444444
%1	19	79	50	2.058	87.4	-0.0999999999999943
%1	25	85	50	2.054	93.1	0.949999999999998
%1	30	90	50	2.057	96.3	0.640000000000001
%1	35	95	50	2.054	94.7	-0.319999999999999
%1	40	100	50	2.056	97	0.459999999999999
%1	45	105	50	2.052	97.6	0.119999999999999
%1	55	115	50	2.049	97.4	-0.0199999999999989
%2	0	120	50	2.053	98	0.119999999999999
%2	5	125	50	2.053	99.4	0.280000000000001
%2	10	130	50	2.044	98.4	-0.2
%2	15	135	50	2.045	97.6	-0.160000000000002
2	20	140	50	2.042	97.4	-0.0399999999999977
2	25	145	50	2.018	97.7	0.0599999999999994
%2	30	147	150	2.019	98.2	0.25
%2	32	152	150	2.016	103	0.959999999999999
%2	37	157	150	2.018	104	0.2
%2	42	162	150	2.015	105.1	0.219999999999999
%2	47	167	150	2.014	104.5	-0.119999999999999
%2	52	172	150	2.014	103.5	-0.2
%2	57	177	150	2.011	104	0.1
%3	2	182	150	2.011	106.3	0.459999999999999
%3	7	187	150	2.009	105.5	-0.159999999999999
%3	12	192	150	2.01	107	0.3
%3	17	197	150	2.009	106.5	-0.1
3	22	202	150	2.009	106.4	-0.0199999999999989
3	27	207	150	2.011	106.6	0.0399999999999977
%3	30	210	400	2.011	111	1.46666666666667
%3	35	215	400	2.011	114.9	0.780000000000001
%3	40	220	400	2.012	115.2	0.0599999999999994
%3	50	230	400	2.01	117.8	0.259999999999999
%3	55	235	400	2.01	118.3	0.1
%4	0	240	400	2.009	118.5	0.0400000000000006
%4	5	245	400	2.009	118.7	0.0400000000000006
%4	10	250	400	2.008	117.1	-0.320000000000002
%4	15	255	400	2.008	118	0.180000000000001
4	20	260	400	2.008	116.7	-0.259999999999999
4	25	265	400	2.007	116.6	-0.0200000000000017
%4	27	267	900	2.011	119	1.2
%4	32	272	900	2.011	123.7	0.940000000000001
%4	37	277	900	2.01	124.7	0.2
%4	42	282	900	2.011	126.2	0.3
%4	47	287	900	2.011	126.1	-0.0200000000000017
4	52	292	900	2.01	126.3	0.0400000000000006
4	57	297	900	2.011	126.2	-0.0199999999999989
%5	0	300	1900	2.018	131.8	1.86666666666667
%5	5	305	1900	2.017	134.3	0.5
%5	10	310	1900	2.018	135.6	0.259999999999997
%5	15	315	1900	2.018	134.7	-0.180000000000001
%5	20	320	1900	2.018	135.4	0.140000000000003
%5	25	325	1900	2.019	135	-0.0800000000000011
%5	30	330	1900	2.018	136.4	0.280000000000001
5	35	335	1900	2.018	136.5	0.0199999999999989
5	40	340	1900	2.018	135.5	-0.2
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	6.097	57.3	
%0	5	5	0	6.051	80.8	4.7
%0	10	10	0	6.071	83.8	0.6
%0	15	15	0	6.093	87.7	0.780000000000001
%0	20	20	0	6.101	87.7	0
0	25	25	0	6.079	87.8	0.0199999999999989
0	30	30	0	6.095	87.5	-0.0599999999999994
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=79.3; Eorig=-26.4; m=21.5; m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	35	35	0	2.06	88.3	0.159999999999999
%0	40	40	0	2.053	88.3	0
%0	45	45	0	2.056	89.2	0.180000000000001
%0	50	50	0	2.055	88.9	-0.0599999999999994
%0	55	55	0	2.056	89.2	0.0599999999999994
1	0	60	0	2.056	91	0.359999999999999
1	18	78	0	2.056	87.5	-0.194444444444444
%1	19	79	50	2.058	87.4	-0.0999999999999943
%1	25	85	50	2.054	93.1	0.949999999999998
%1	30	90	50	2.057	96.3	0.640000000000001
%1	35	95	50	2.054	94.7	-0.319999999999999
%1	40	100	50	2.056	97	0.459999999999999
%1	45	105	50	2.052	97.6	0.119999999999999
%1	55	115	50	2.049	97.4	-0.0199999999999989
%2	0	120	50	2.053	98	0.119999999999999
%2	5	125	50	2.053	99.4	0.280000000000001
%2	10	130	50	2.044	98.4	-0.2
%2	15	135	50	2.045	97.6	-0.160000000000002
2	20	140	50	2.042	97.4	-0.0399999999999977
2	25	145	50	2.018	97.7	0.0599999999999994
%2	30	147	150	2.019	98.2	0.25
%2	32	152	150	2.016	103	0.959999999999999
%2	37	157	150	2.018	104	0.2
%2	42	162	150	2.015	105.1	0.219999999999999
%2	47	167	150	2.014	104.5	-0.119999999999999
%2	52	172	150	2.014	103.5	-0.2
%2	57	177	150	2.011	104	0.1
%3	2	182	150	2.011	106.3	0.459999999999999
%3	7	187	150	2.009	105.5	-0.159999999999999
%3	12	192	150	2.01	107	0.3
%3	17	197	150	2.009	106.5	-0.1
3	22	202	150	2.009	106.4	-0.0199999999999989
3	27	207	150	2.011	106.6	0.0399999999999977
%3	30	210	400	2.011	111	1.46666666666667
%3	35	215	400	2.011	114.9	0.780000000000001
%3	40	220	400	2.012	115.2	0.0599999999999994
%3	50	230	400	2.01	117.8	0.259999999999999
%3	55	235	400	2.01	118.3	0.1
%4	0	240	400	2.009	118.5	0.0400000000000006
%4	5	245	400	2.009	118.7	0.0400000000000006
%4	10	250	400	2.008	117.1	-0.320000000000002
%4	15	255	400	2.008	118	0.180000000000001
4	20	260	400	2.008	116.7	-0.259999999999999
4	25	265	400	2.007	116.6	-0.0200000000000017
%4	27	267	900	2.011	119	1.2
%4	32	272	900	2.011	123.7	0.940000000000001
%4	37	277	900	2.01	124.7	0.2
%4	42	282	900	2.011	126.2	0.3
%4	47	287	900	2.011	126.1	-0.0200000000000017
4	52	292	900	2.01	126.3	0.0400000000000006
4	57	297	900	2.011	126.2	-0.0199999999999989
%5	0	300	1900	2.018	131.8	1.86666666666667
%5	5	305	1900	2.017	134.3	0.5
%5	10	310	1900	2.018	135.6	0.259999999999997
%5	15	315	1900	2.018	134.7	-0.180000000000001
%5	20	320	1900	2.018	135.4	0.140000000000003
%5	25	325	1900	2.019	135	-0.0800000000000011
%5	30	330	1900	2.018	136.4	0.280000000000001
5	35	335	1900	2.018	136.5	0.0199999999999989
5	40	340	1900	2.018	135.5	-0.2
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	6.097	57.3	
%0	5	5	0	6.051	80.8	4.7
%0	10	10	0	6.071	83.8	0.6
%0	15	15	0	6.093	87.7	0.780000000000001
%0	20	20	0	6.101	87.7	0
0	25	25	0	6.079	87.8	0.0199999999999989
0	30	30	0	6.095	87.5	-0.0599999999999994
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(5:end)),Emeas(5:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	35	35	0	2.06	88.3	0.159999999999999
%0	40	40	0	2.053	88.3	0
%0	45	45	0	2.056	89.2	0.180000000000001
%0	50	50	0	2.055	88.9	-0.0599999999999994
%0	55	55	0	2.056	89.2	0.0599999999999994
1	0	60	0	2.056	91	0.359999999999999
1	18	78	0	2.056	87.5	-0.194444444444444
%1	19	79	50	2.058	87.4	-0.0999999999999943
%1	25	85	50	2.054	93.1	0.949999999999998
%1	30	90	50	2.057	96.3	0.640000000000001
%1	35	95	50	2.054	94.7	-0.319999999999999
%1	40	100	50	2.056	97	0.459999999999999
%1	45	105	50	2.052	97.6	0.119999999999999
%1	55	115	50	2.049	97.4	-0.0199999999999989
%2	0	120	50	2.053	98	0.119999999999999
%2	5	125	50	2.053	99.4	0.280000000000001
%2	10	130	50	2.044	98.4	-0.2
%2	15	135	50	2.045	97.6	-0.160000000000002
2	20	140	50	2.042	97.4	-0.0399999999999977
2	25	145	50	2.018	97.7	0.0599999999999994
%2	30	147	150	2.019	98.2	0.25
%2	32	152	150	2.016	103	0.959999999999999
%2	37	157	150	2.018	104	0.2
%2	42	162	150	2.015	105.1	0.219999999999999
%2	47	167	150	2.014	104.5	-0.119999999999999
%2	52	172	150	2.014	103.5	-0.2
%2	57	177	150	2.011	104	0.1
%3	2	182	150	2.011	106.3	0.459999999999999
%3	7	187	150	2.009	105.5	-0.159999999999999
%3	12	192	150	2.01	107	0.3
%3	17	197	150	2.009	106.5	-0.1
3	22	202	150	2.009	106.4	-0.0199999999999989
3	27	207	150	2.011	106.6	0.0399999999999977
%3	30	210	400	2.011	111	1.46666666666667
%3	35	215	400	2.011	114.9	0.780000000000001
%3	40	220	400	2.012	115.2	0.0599999999999994
%3	50	230	400	2.01	117.8	0.259999999999999
%3	55	235	400	2.01	118.3	0.1
%4	0	240	400	2.009	118.5	0.0400000000000006
%4	5	245	400	2.009	118.7	0.0400000000000006
%4	10	250	400	2.008	117.1	-0.320000000000002
%4	15	255	400	2.008	118	0.180000000000001
4	20	260	400	2.008	116.7	-0.259999999999999
4	25	265	400	2.007	116.6	-0.0200000000000017
%4	27	267	900	2.011	119	1.2
%4	32	272	900	2.011	123.7	0.940000000000001
%4	37	277	900	2.01	124.7	0.2
%4	42	282	900	2.011	126.2	0.3
%4	47	287	900	2.011	126.1	-0.0200000000000017
4	52	292	900	2.01	126.3	0.0400000000000006
4	57	297	900	2.011	126.2	-0.0199999999999989
%5	0	300	1900	2.018	131.8	1.86666666666667
%5	5	305	1900	2.017	134.3	0.5
%5	10	310	1900	2.018	135.6	0.259999999999997
%5	15	315	1900	2.018	134.7	-0.180000000000001
%5	20	320	1900	2.018	135.4	0.140000000000003
%5	25	325	1900	2.019	135	-0.0800000000000011
%5	30	330	1900	2.018	136.4	0.280000000000001
5	35	335	1900	2.018	136.5	0.0199999999999989
5	40	340	1900	2.018	135.5	-0.2
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	6.097	57.3	
%0	5	5	0	6.051	80.8	4.7
%0	10	10	0	6.071	83.8	0.6
%0	15	15	0	6.093	87.7	0.780000000000001
%0	20	20	0	6.101	87.7	0
0	25	25	0	6.079	87.8	0.0199999999999989
0	30	30	0	6.095	87.5	-0.0599999999999994
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=9.4897; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -11.0185 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 23:09:01.849 NotebookApp] Saving file at /KNO3_pH6_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	35	35	0	2.06	88.3	0.159999999999999
%0	40	40	0	2.053	88.3	0
%0	45	45	0	2.056	89.2	0.180000000000001
%0	50	50	0	2.055	88.9	-0.0599999999999994
%0	55	55	0	2.056	89.2	0.0599999999999994
1	0	60	0	2.056	91	0.359999999999999
1	18	78	0	2.056	87.5	-0.194444444444444
%1	19	79	50	2.058	87.4	-0.0999999999999943
%1	25	85	50	2.054	93.1	0.949999999999998
%1	30	90	50	2.057	96.3	0.640000000000001
%1	35	95	50	2.054	94.7	-0.319999999999999
%1	40	100	50	2.056	97	0.459999999999999
%1	45	105	50	2.052	97.6	0.119999999999999
%1	55	115	50	2.049	97.4	-0.0199999999999989
%2	0	120	50	2.053	98	0.119999999999999
%2	5	125	50	2.053	99.4	0.280000000000001
%2	10	130	50	2.044	98.4	-0.2
%2	15	135	50	2.045	97.6	-0.160000000000002
2	20	140	50	2.042	97.4	-0.0399999999999977
2	25	145	50	2.018	97.7	0.0599999999999994
%2	30	147	150	2.019	98.2	0.25
%2	32	152	150	2.016	103	0.959999999999999
%2	37	157	150	2.018	104	0.2
%2	42	162	150	2.015	105.1	0.219999999999999
%2	47	167	150	2.014	104.5	-0.119999999999999
%2	52	172	150	2.014	103.5	-0.2
%2	57	177	150	2.011	104	0.1
%3	2	182	150	2.011	106.3	0.459999999999999
%3	7	187	150	2.009	105.5	-0.159999999999999
%3	12	192	150	2.01	107	0.3
%3	17	197	150	2.009	106.5	-0.1
3	22	202	150	2.009	106.4	-0.0199999999999989
3	27	207	150	2.011	106.6	0.0399999999999977
%3	30	210	400	2.011	111	1.46666666666667
%3	35	215	400	2.011	114.9	0.780000000000001
%3	40	220	400	2.012	115.2	0.0599999999999994
%3	50	230	400	2.01	117.8	0.259999999999999
%3	55	235	400	2.01	118.3	0.1
%4	0	240	400	2.009	118.5	0.0400000000000006
%4	5	245	400	2.009	118.7	0.0400000000000006
%4	10	250	400	2.008	117.1	-0.320000000000002
%4	15	255	400	2.008	118	0.180000000000001
4	20	260	400	2.008	116.7	-0.259999999999999
4	25	265	400	2.007	116.6	-0.0200000000000017
%4	27	267	900	2.011	119	1.2
%4	32	272	900	2.011	123.7	0.940000000000001
%4	37	277	900	2.01	124.7	0.2
%4	42	282	900	2.011	126.2	0.3
%4	47	287	900	2.011	126.1	-0.0200000000000017
4	52	292	900	2.01	126.3	0.0400000000000006
4	57	297	900	2.011	126.2	-0.0199999999999989
%5	0	300	1900	2.018	131.8	1.86666666666667
%5	5	305	1900	2.017	134.3	0.5
%5	10	310	1900	2.018	135.6	0.259999999999997
%5	15	315	1900	2.018	134.7	-0.180000000000001
%5	20	320	1900	2.018	135.4	0.140000000000003
%5	25	325	1900	2.019	135	-0.0800000000000011
%5	30	330	1900	2.018	136.4	0.280000000000001
5	35	335	1900	2.018	136.5	0.0199999999999989
5	40	340	1900	2.018	135.5	-0.2
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	6.097	57.3	
%0	5	5	0	6.051	80.8	4.7
%0	10	10	0	6.071	83.8	0.6
%0	15	15	0	6.093	87.7	0.780000000000001
%0	20	20	0	6.101	87.7	0
0	25	25	0	6.079	87.8	0.0199999999999989
0	30	30	0	6.095	87.5	-0.0599999999999994
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -6.04294 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	35	35	0	2.06	88.3	0.159999999999999
%0	40	40	0	2.053	88.3	0
%0	45	45	0	2.056	89.2	0.180000000000001
%0	50	50	0	2.055	88.9	-0.0599999999999994
%0	55	55	0	2.056	89.2	0.0599999999999994
%1	0	60	0	2.056	91	0.359999999999999
1	18	78	0	2.056	87.5	-0.194444444444444
%1	19	79	50	2.058	87.4	-0.0999999999999943
%1	25	85	50	2.054	93.1	0.949999999999998
%1	30	90	50	2.057	96.3	0.640000000000001
%1	35	95	50	2.054	94.7	-0.319999999999999
%1	40	100	50	2.056	97	0.459999999999999
%1	45	105	50	2.052	97.6	0.119999999999999
%1	55	115	50	2.049	97.4	-0.0199999999999989
%2	0	120	50	2.053	98	0.119999999999999
%2	5	125	50	2.053	99.4	0.280000000000001
%2	10	130	50	2.044	98.4	-0.2
%2	15	135	50	2.045	97.6	-0.160000000000002
2	20	140	50	2.042	97.4	-0.0399999999999977
2	25	145	50	2.018	97.7	0.0599999999999994
%2	30	147	150	2.019	98.2	0.25
%2	32	152	150	2.016	103	0.959999999999999
%2	37	157	150	2.018	104	0.2
%2	42	162	150	2.015	105.1	0.219999999999999
%2	47	167	150	2.014	104.5	-0.119999999999999
%2	52	172	150	2.014	103.5	-0.2
%2	57	177	150	2.011	104	0.1
%3	2	182	150	2.011	106.3	0.459999999999999
%3	7	187	150	2.009	105.5	-0.159999999999999
%3	12	192	150	2.01	107	0.3
%3	17	197	150	2.009	106.5	-0.1
3	22	202	150	2.009	106.4	-0.0199999999999989
3	27	207	150	2.011	106.6	0.0399999999999977
%3	30	210	400	2.011	111	1.46666666666667
%3	35	215	400	2.011	114.9	0.780000000000001
%3	40	220	400	2.012	115.2	0.0599999999999994
%3	50	230	400	2.01	117.8	0.259999999999999
%3	55	235	400	2.01	118.3	0.1
%4	0	240	400	2.009	118.5	0.0400000000000006
%4	5	245	400	2.009	118.7	0.0400000000000006
%4	10	250	400	2.008	117.1	-0.320000000000002
%4	15	255	400	2.008	118	0.180000000000001
4	20	260	400	2.008	116.7	-0.259999999999999
4	25	265	400	2.007	116.6	-0.0200000000000017
%4	27	267	900	2.011	119	1.2
%4	32	272	900	2.011	123.7	0.940000000000001
%4	37	277	900	2.01	124.7	0.2
%4	42	282	900	2.011	126.2	0.3
%4	47	287	900	2.011	126.1	-0.0200000000000017
4	52	292	900	2.01	126.3	0.0400000000000006
4	57	297	900	2.011	126.2	-0.0199999999999989
%5	0	300	1900	2.018	131.8	1.86666666666667
%5	5	305	1900	2.017	134.3	0.5
%5	10	310	1900	2.018	135.6	0.259999999999997
%5	15	315	1900	2.018	134.7	-0.180000000000001
%5	20	320	1900	2.018	135.4	0.140000000000003
%5	25	325	1900	2.019	135	-0.0800000000000011
%5	30	330	1900	2.018	136.4	0.280000000000001
5	35	335	1900	2.018	136.5	0.0199999999999989
5	40	340	1900	2.018	135.5	-0.2
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	6.097	57.3	
%0	5	5	0	6.051	80.8	4.7
%0	10	10	0	6.071	83.8	0.6
%0	15	15	0	6.093	87.7	0.780000000000001
%0	20	20	0	6.101	87.7	0
0	25	25	0	6.079	87.8	0.0199999999999989
0	30	30	0	6.095	87.5	-0.0599999999999994
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -6.04294 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	35	35	0	2.06	88.3	0.159999999999999
%0	40	40	0	2.053	88.3	0
%0	45	45	0	2.056	89.2	0.180000000000001
%0	50	50	0	2.055	88.9	-0.0599999999999994
%0	55	55	0	2.056	89.2	0.0599999999999994
%1	0	60	0	2.056	91	0.359999999999999
1	18	78	0	2.056	87.5	-0.194444444444444
%1	19	79	50	2.058	87.4	-0.0999999999999943
%1	25	85	50	2.054	93.1	0.949999999999998
%1	30	90	50	2.057	96.3	0.640000000000001
%1	35	95	50	2.054	94.7	-0.319999999999999
%1	40	100	50	2.056	97	0.459999999999999
%1	45	105	50	2.052	97.6	0.119999999999999
%1	55	115	50	2.049	97.4	-0.0199999999999989
%2	0	120	50	2.053	98	0.119999999999999
%2	5	125	50	2.053	99.4	0.280000000000001
%2	10	130	50	2.044	98.4	-0.2
%2	15	135	50	2.045	97.6	-0.160000000000002
2	20	140	50	2.042	97.4	-0.0399999999999977
2	25	145	50	2.018	97.7	0.0599999999999994
%2	30	147	150	2.019	98.2	0.25
%2	32	152	150	2.016	103	0.959999999999999
%2	37	157	150	2.018	104	0.2
%2	42	162	150	2.015	105.1	0.219999999999999
%2	47	167	150	2.014	104.5	-0.119999999999999
%2	52	172	150	2.014	103.5	-0.2
%2	57	177	150	2.011	104	0.1
%3	2	182	150	2.011	106.3	0.459999999999999
%3	7	187	150	2.009	105.5	-0.159999999999999
%3	12	192	150	2.01	107	0.3
%3	17	197	150	2.009	106.5	-0.1
3	22	202	150	2.009	106.4	-0.0199999999999989
3	27	207	150	2.011	106.6	0.0399999999999977
%3	30	210	400	2.011	111	1.46666666666667
%3	35	215	400	2.011	114.9	0.780000000000001
%3	40	220	400	2.012	115.2	0.0599999999999994
%3	50	230	400	2.01	117.8	0.259999999999999
%3	55	235	400	2.01	118.3	0.1
%4	0	240	400	2.009	118.5	0.0400000000000006
%4	5	245	400	2.009	118.7	0.0400000000000006
%4	10	250	400	2.008	117.1	-0.320000000000002
%4	15	255	400	2.008	118	0.180000000000001
4	20	260	400	2.008	116.7	-0.259999999999999
4	25	265	400	2.007	116.6	-0.0200000000000017
%4	27	267	900	2.011	119	1.2
%4	32	272	900	2.011	123.7	0.940000000000001
%4	37	277	900	2.01	124.7	0.2
%4	42	282	900	2.011	126.2	0.3
%4	47	287	900	2.011	126.1	-0.0200000000000017
4	52	292	900	2.01	126.3	0.0400000000000006
4	57	297	900	2.011	126.2	-0.0199999999999989
%5	0	300	1900	2.018	131.8	1.86666666666667
%5	5	305	1900	2.017	134.3	0.5
%5	10	310	1900	2.018	135.6	0.259999999999997
%5	15	315	1900	2.018	134.7	-0.180000000000001
%5	20	320	1900	2.018	135.4	0.140000000000003
%5	25	325	1900	2.019	135	-0.0800000000000011
%5	30	330	1900	2.018	136.4	0.280000000000001
5	35	335	1900	2.018	136.5	0.0199999999999989
5	40	340	1900	2.018	135.5	-0.2
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	6.097	57.3	
%0	5	5	0	6.051	80.8	4.7
%0	10	10	0	6.071	83.8	0.6
%0	15	15	0	6.093	87.7	0.780000000000001
%0	20	20	0	6.101	87.7	0
0	25	25	0	6.079	87.8	0.0199999999999989
0	30	30	0	6.095	87.5	-0.0599999999999994
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
paramlinear=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -6.04294 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 23:11:01.923 NotebookApp] Saving file at /KNO3_pH6_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	35	35	0	2.06	88.3	0.159999999999999
%0	40	40	0	2.053	88.3	0
%0	45	45	0	2.056	89.2	0.180000000000001
%0	50	50	0	2.055	88.9	-0.0599999999999994
%0	55	55	0	2.056	89.2	0.0599999999999994
%1	0	60	0	2.056	91	0.359999999999999
1	18	78	0	2.056	87.5	-0.194444444444444
%1	19	79	50	2.058	87.4	-0.0999999999999943
%1	25	85	50	2.054	93.1	0.949999999999998
%1	30	90	50	2.057	96.3	0.640000000000001
%1	35	95	50	2.054	94.7	-0.319999999999999
%1	40	100	50	2.056	97	0.459999999999999
%1	45	105	50	2.052	97.6	0.119999999999999
%1	55	115	50	2.049	97.4	-0.0199999999999989
%2	0	120	50	2.053	98	0.119999999999999
%2	5	125	50	2.053	99.4	0.280000000000001
%2	10	130	50	2.044	98.4	-0.2
%2	15	135	50	2.045	97.6	-0.160000000000002
2	20	140	50	2.042	97.4	-0.0399999999999977
2	25	145	50	2.018	97.7	0.0599999999999994
%2	30	147	150	2.019	98.2	0.25
%2	32	152	150	2.016	103	0.959999999999999
%2	37	157	150	2.018	104	0.2
%2	42	162	150	2.015	105.1	0.219999999999999
%2	47	167	150	2.014	104.5	-0.119999999999999
%2	52	172	150	2.014	103.5	-0.2
%2	57	177	150	2.011	104	0.1
%3	2	182	150	2.011	106.3	0.459999999999999
%3	7	187	150	2.009	105.5	-0.159999999999999
%3	12	192	150	2.01	107	0.3
%3	17	197	150	2.009	106.5	-0.1
3	22	202	150	2.009	106.4	-0.0199999999999989
3	27	207	150	2.011	106.6	0.0399999999999977
%3	30	210	400	2.011	111	1.46666666666667
%3	35	215	400	2.011	114.9	0.780000000000001
%3	40	220	400	2.012	115.2	0.0599999999999994
%3	50	230	400	2.01	117.8	0.259999999999999
%3	55	235	400	2.01	118.3	0.1
%4	0	240	400	2.009	118.5	0.0400000000000006
%4	5	245	400	2.009	118.7	0.0400000000000006
%4	10	250	400	2.008	117.1	-0.320000000000002
%4	15	255	400	2.008	118	0.180000000000001
4	20	260	400	2.008	116.7	-0.259999999999999
4	25	265	400	2.007	116.6	-0.0200000000000017
%4	27	267	900	2.011	119	1.2
%4	32	272	900	2.011	123.7	0.940000000000001
%4	37	277	900	2.01	124.7	0.2
%4	42	282	900	2.011	126.2	0.3
%4	47	287	900	2.011	126.1	-0.0200000000000017
4	52	292	900	2.01	126.3	0.0400000000000006
4	57	297	900	2.011	126.2	-0.0199999999999989
%5	0	300	1900	2.018	131.8	1.86666666666667
%5	5	305	1900	2.017	134.3	0.5
%5	10	310	1900	2.018	135.6	0.259999999999997
%5	15	315	1900	2.018	134.7	-0.180000000000001
%5	20	320	1900	2.018	135.4	0.140000000000003
%5	25	325	1900	2.019	135	-0.0800000000000011
%5	30	330	1900	2.018	136.4	0.280000000000001
5	35	335	1900	2.018	136.5	0.0199999999999989
5	40	340	1900	2.018	135.5	-0.2
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	6.097	57.3	
%0	5	5	0	6.051	80.8	4.7
%0	10	10	0	6.071	83.8	0.6
%0	15	15	0	6.093	87.7	0.780000000000001
%0	20	20	0	6.101	87.7	0
0	25	25	0	6.079	87.8	0.0199999999999989
0	30	30	0	6.095	87.5	-0.0599999999999994
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
paramlinear=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.04294 50 0.253456 35.7873

list
string: Total Cu
 -6.91521 40 0.230415 26.2927

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	35	35	0	2.06	88.3	0.159999999999999
%0	40	40	0	2.053	88.3	0
%0	45	45	0	2.056	89.2	0.180000000000001
%0	50	50	0	2.055	88.9	-0.0599999999999994
%0	55	55	0	2.056	89.2	0.0599999999999994
%1	0	60	0	2.056	91	0.359999999999999
1	18	78	0	2.056	87.5	-0.194444444444444
%1	19	79	50	2.058	87.4	-0.0999999999999943
%1	25	85	50	2.054	93.1	0.949999999999998
%1	30	90	50	2.057	96.3	0.640000000000001
%1	35	95	50	2.054	94.7	-0.319999999999999
%1	40	100	50	2.056	97	0.459999999999999
%1	45	105	50	2.052	97.6	0.119999999999999
%1	55	115	50	2.049	97.4	-0.0199999999999989
%2	0	120	50	2.053	98	0.119999999999999
%2	5	125	50	2.053	99.4	0.280000000000001
%2	10	130	50	2.044	98.4	-0.2
%2	15	135	50	2.045	97.6	-0.160000000000002
2	20	140	50	2.042	97.4	-0.0399999999999977
2	25	145	50	2.018	97.7	0.0599999999999994
%2	30	147	150	2.019	98.2	0.25
%2	32	152	150	2.016	103	0.959999999999999
%2	37	157	150	2.018	104	0.2
%2	42	162	150	2.015	105.1	0.219999999999999
%2	47	167	150	2.014	104.5	-0.119999999999999
%2	52	172	150	2.014	103.5	-0.2
%2	57	177	150	2.011	104	0.1
%3	2	182	150	2.011	106.3	0.459999999999999
%3	7	187	150	2.009	105.5	-0.159999999999999
%3	12	192	150	2.01	107	0.3
%3	17	197	150	2.009	106.5	-0.1
3	22	202	150	2.009	106.4	-0.0199999999999989
3	27	207	150	2.011	106.6	0.0399999999999977
%3	30	210	400	2.011	111	1.46666666666667
%3	35	215	400	2.011	114.9	0.780000000000001
%3	40	220	400	2.012	115.2	0.0599999999999994
%3	50	230	400	2.01	117.8	0.259999999999999
%3	55	235	400	2.01	118.3	0.1
%4	0	240	400	2.009	118.5	0.0400000000000006
%4	5	245	400	2.009	118.7	0.0400000000000006
%4	10	250	400	2.008	117.1	-0.320000000000002
%4	15	255	400	2.008	118	0.180000000000001
4	20	260	400	2.008	116.7	-0.259999999999999
4	25	265	400	2.007	116.6	-0.0200000000000017
%4	27	267	900	2.011	119	1.2
%4	32	272	900	2.011	123.7	0.940000000000001
%4	37	277	900	2.01	124.7	0.2
%4	42	282	900	2.011	126.2	0.3
%4	47	287	900	2.011	126.1	-0.0200000000000017
4	52	292	900	2.01	126.3	0.0400000000000006
4	57	297	900	2.011	126.2	-0.0199999999999989
%5	0	300	1900	2.018	131.8	1.86666666666667
%5	5	305	1900	2.017	134.3	0.5
%5	10	310	1900	2.018	135.6	0.259999999999997
%5	15	315	1900	2.018	134.7	-0.180000000000001
%5	20	320	1900	2.018	135.4	0.140000000000003
%5	25	325	1900	2.019	135	-0.0800000000000011
%5	30	330	1900	2.018	136.4	0.280000000000001
5	35	335	1900	2.018	136.5	0.0199999999999989
5	40	340	1900	2.018	135.5	-0.2
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	6.097	57.3	
%0	5	5	0	6.051	80.8	4.7
%0	10	10	0	6.071	83.8	0.6
%0	15	15	0	6.093	87.7	0.780000000000001
%0	20	20	0	6.101	87.7	0
0	25	25	0	6.079	87.8	0.0199999999999989
0	30	30	0	6.095	87.5	-0.0599999999999994
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-5; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
paramlinear=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -150
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -5.04294 50 0.253456 42.9448

list
string: Total Cu
 -4.91521 40 0.230415 31.5513

[I 23:18:10.991 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-5; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -6.16346 50 0.329493 15.7464

list
string: Total Cu
 -4.94977 60 0.299539 11.5688

[I 23:18:25.468 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%2	15	135	0	2.013	86.4	6.88
%2	20	140	0	2.014	92.2	1.16
%2	25	145	0	2.011	96.6	0.879999999999998
%2	30	150	0	2.011	101.2	0.920000000000002
%2	40	160	0	2.01	104.2	0.3
%2	50	170	0	2.009	104.4	0.0200000000000003
%2	55	175	0	2.009	106.6	0.439999999999998
%3	0	180	0	2.009	108	0.280000000000001
%3	5	185	0	2.009	108.7	0.140000000000001
%3	10	190	0	2.009	108.6	-0.0200000000000017
%3	15	195	0	2.008	108.8	0.0400000000000006
%3	20	200	0	2.007	109.7	0.180000000000001
%3	25	205	0	2.007	109.9	0.0400000000000006
%3	30	210	0	2.005	107.8	-0.420000000000002
%3	40	220	0	2.004	110.5	0.27
%3	45	225	0	2.004	111.4	0.180000000000001
%3	50	230	0	2.003	111.9	0.1
%3	55	235	0	2.003	112.7	0.159999999999999
%4	0	240	0	2.004	113.9	0.240000000000001
%4	5	245	0	2.004	115.8	0.379999999999998
%4	10	250	0	2.004	114.8	-0.2
%4	15	255	0	2.002	115.6	0.159999999999999
%4	20	260	0	2.002	116.4	0.160000000000002
%4	30	270	0	2.001	114.1	-0.230000000000001
4	35	275	0	2.001	115.1	0.2
4	50	290	0	1.999	115	-0.00666666666666629
%4	55	295	50	1.998	116.1	0.219999999999999
%5	5	305	50	1.998	117.4	0.130000000000001
%5	10	310	50	1.998	117.1	-0.0600000000000023
%5	15	315	50	1.997	116.8	-0.0599999999999994
%5	20	320	50	1.997	117.7	0.180000000000001
%5	25	325	50	1.996	117.2	-0.1
%5	30	330	50	1.996	119	0.359999999999999
%5	35	335	50	1.995	118.8	-0.0400000000000006
%5	40	340	50	1.995	119.1	0.0599999999999994
5	45	345	50	1.995	119.6	0.1
5	50	350	50	1.994	118.6	-0.2
%5	55	355	150	1.995	120.6	0.4
%6	0	360	150	1.995	120.1	-0.1
%6	5	365	150	1.995	121.8	0.340000000000001
%6	10	370	150	1.995	121.4	-0.0799999999999983
%6	15	375	150	1.996	121.9	0.1
%6	20	380	150	1.995	122	0.0199999999999989
%6	25	385	150	1.995	123.1	0.219999999999999
%6	30	390	150	1.994	122.4	-0.139999999999998
6	35	395	150	1.994	122.9	0.1
6	40	400	150	1.994	122.2	-0.140000000000001
%6	45	405	400	1.995	124.7	0.5
%6	50	410	400	1.995	125	0.0599999999999994
%6	55	415	400	1.996	125.1	0.0199999999999989
%7	0	420	400	1.996	125.8	0.140000000000001
%7	5	425	400	1.996	126.5	0.140000000000001
%7	10	430	400	1.996	126.2	-0.0599999999999994
7	15	435	400	1.996	126.2	0
7	20	440	400	1.995	126.4	0.0400000000000006
%7	25	445	900	1.998	130.5	0.819999999999999
7	30	450	900	1.998	129.6	-0.180000000000001
7	35	455	900	1.997	130.8	0.240000000000003
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	8.041	53.6	
%0	5	5	0	8.085	50	-0.72
%0	10	10	0	7.969	53	0.6
%0	15	15	0	8.031	49.8	-0.640000000000001
%0	20	20	0	7.999	51	0.240000000000001
%0	25	25	0	8.004	50.1	-0.18
%0	30	30	0	8.014	50.5	0.0799999999999997
%0	35	35	0	7.992	50.5	0
%0	40	40	0	8	51.4	0.18
%0	45	45	0	8.001	52	0.12
%0	50	50	0	8.008	51.1	-0.18
%0	55	55	0	8.006	51.3	0.0399999999999992
%1	0	60	0	8.001	51.3	0
%1	5	65	0	7.986	52.6	0.260000000000001
%1	10	70	0	7.978	52.3	-0.0600000000000009
%1	15	75	0	7.991	52	-0.0599999999999994
%1	20	80	0	7.984	50.3	-0.340000000000001
%1	25	85	0	7.979	50.7	0.0800000000000011
%1	30	90	0	7.972	53.7	0.6
%1	35	95	0	7.971	52.7	-0.2
%1	40	100	0	7.966	52.3	-0.0800000000000011
%1	45	105	0	7.964	53.2	0.180000000000001
%1	50	110	0	8.058	53.6	0.0799999999999997
1	55	115	0	8.029	53.7	0.0200000000000003
2	10	130	0	8.017	52	-0.113333333333334
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 23:19:01.990 NotebookApp] Saving file at /KNO3_pH6_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	45	105	0	2.086	75.5	1.62
%1	50	110	0	2.045	76.3	0.159999999999999
%1	55	115	0	2.04	79	0.540000000000001
%2	0	120	0	2.041	79.2	0.0400000000000006
%2	5	125	0	2.039	80.4	0.240000000000001
%2	10	130	0	2.04	82.2	0.359999999999999
%2	15	135	0	2.04	81.7	-0.1
%2	20	140	0	2.038	84	0.459999999999999
%2	25	145	0	2.037	82.9	-0.219999999999999
%2	30	150	0	2.037	83.5	0.119999999999999
%2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
%3	5	185	50	2.037	87.3	0.540000000000001
%3	8	188	50	2.036	91.2	1.3
%3	13	193	50	2.037	92.3	0.219999999999999
%3	18	198	50	2.032	92.8	0.1
%3	23	203	50	2.036	93.7	0.180000000000001
%3	28	208	50	2.035	93.3	-0.0800000000000011
%3	33	213	50	2.036	93.9	0.120000000000002
%3	38	218	50	2.037	95.4	0.3
%3	43	223	50	2.035	95.3	-0.0200000000000017
%3	48	228	50	2.035	96.3	0.2
%3	53	233	50	2.033	98.2	0.380000000000001
%3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
%4	10	250	150	2.036	100.5	0.950000000000003
%4	15	255	150	2.034	105.2	0.940000000000001
%4	20	260	150	2.036	105.6	0.0799999999999983
%4	25	265	150	2.034	107	0.280000000000001
%4	30	270	150	2.034	108	0.2
%4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
%4	50	290	400	2.031	115	1.46
%4	55	295	400	2.031	115.9	0.180000000000001
%5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
%5	15	315	900	2.034	124.8	1.76
%5	20	320	900	2.037	125.3	0.1
%5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
%5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
%6	0	360	3400	2.05	140.8	1.32
%6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	5.992	49.4	
%0	5	5	0	6.002	55.7	1.26
%0	10	10	0	6.018	59.4	0.739999999999999
%0	15	15	0	6.033	62.5	0.62
%0	20	20	0	6.046	62.6	0.0200000000000003
%0	25	25	0	6.064	65.4	0.560000000000001
%0	30	30	0	6.054	73	1.52
%1	0	60	0	6.077	70.1	-0.0966666666666669
%1	5	65	0	6.042	67.4	-0.539999999999998
%1	10	70	0	6.064	69.9	0.5
%1	15	75	0	6.077	69.9	0
%1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.08003 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	45	105	0	2.086	75.5	1.62
%1	50	110	0	2.045	76.3	0.159999999999999
%1	55	115	0	2.04	79	0.540000000000001
%2	0	120	0	2.041	79.2	0.0400000000000006
%2	5	125	0	2.039	80.4	0.240000000000001
%2	10	130	0	2.04	82.2	0.359999999999999
%2	15	135	0	2.04	81.7	-0.1
%2	20	140	0	2.038	84	0.459999999999999
%2	25	145	0	2.037	82.9	-0.219999999999999
%2	30	150	0	2.037	83.5	0.119999999999999
%2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
%3	5	185	50	2.037	87.3	0.540000000000001
%3	8	188	50	2.036	91.2	1.3
%3	13	193	50	2.037	92.3	0.219999999999999
%3	18	198	50	2.032	92.8	0.1
%3	23	203	50	2.036	93.7	0.180000000000001
%3	28	208	50	2.035	93.3	-0.0800000000000011
%3	33	213	50	2.036	93.9	0.120000000000002
%3	38	218	50	2.037	95.4	0.3
%3	43	223	50	2.035	95.3	-0.0200000000000017
%3	48	228	50	2.035	96.3	0.2
%3	53	233	50	2.033	98.2	0.380000000000001
%3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
%4	10	250	150	2.036	100.5	0.950000000000003
%4	15	255	150	2.034	105.2	0.940000000000001
%4	20	260	150	2.036	105.6	0.0799999999999983
%4	25	265	150	2.034	107	0.280000000000001
%4	30	270	150	2.034	108	0.2
%4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
%4	50	290	400	2.031	115	1.46
%4	55	295	400	2.031	115.9	0.180000000000001
%5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
%5	15	315	900	2.034	124.8	1.76
%5	20	320	900	2.037	125.3	0.1
%5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
%5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
%6	0	360	3400	2.05	140.8	1.32
%6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	5.992	49.4	
%0	5	5	0	6.002	55.7	1.26
%0	10	10	0	6.018	59.4	0.739999999999999
%0	15	15	0	6.033	62.5	0.62
%0	20	20	0	6.046	62.6	0.0200000000000003
%0	25	25	0	6.064	65.4	0.560000000000001
%0	30	30	0	6.054	73	1.52
%1	0	60	0	6.077	70.1	-0.0966666666666669
%1	5	65	0	6.042	67.4	-0.539999999999998
%1	10	70	0	6.064	69.9	0.5
%1	15	75	0	6.077	69.9	0
%1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -6.08003 50 0.329493 27.1984

list
string: Total Cu
 -5.94977 60 0.299539 19.9825

[I 23:19:42.907 NotebookApp] Saving file at /KNO3_pH6_0pt1uMCuT.ipynb
[I 23:19:45.134 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT.ipynb
[I 23:20:31.366 NotebookApp] Saving file at /KNO3_pH6_1uMCuT.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	35	35	0	2.06	88.3	0.159999999999999
%0	40	40	0	2.053	88.3	0
%0	45	45	0	2.056	89.2	0.180000000000001
%0	50	50	0	2.055	88.9	-0.0599999999999994
%0	55	55	0	2.056	89.2	0.0599999999999994
%1	0	60	0	2.056	91	0.359999999999999
1	18	78	0	2.056	87.5	-0.194444444444444
%1	19	79	50	2.058	87.4	-0.0999999999999943
%1	25	85	50	2.054	93.1	0.949999999999998
%1	30	90	50	2.057	96.3	0.640000000000001
%1	35	95	50	2.054	94.7	-0.319999999999999
%1	40	100	50	2.056	97	0.459999999999999
%1	45	105	50	2.052	97.6	0.119999999999999
%1	55	115	50	2.049	97.4	-0.0199999999999989
%2	0	120	50	2.053	98	0.119999999999999
%2	5	125	50	2.053	99.4	0.280000000000001
%2	10	130	50	2.044	98.4	-0.2
%2	15	135	50	2.045	97.6	-0.160000000000002
2	20	140	50	2.042	97.4	-0.0399999999999977
2	25	145	50	2.018	97.7	0.0599999999999994
%2	30	147	150	2.019	98.2	0.25
%2	32	152	150	2.016	103	0.959999999999999
%2	37	157	150	2.018	104	0.2
%2	42	162	150	2.015	105.1	0.219999999999999
%2	47	167	150	2.014	104.5	-0.119999999999999
%2	52	172	150	2.014	103.5	-0.2
%2	57	177	150	2.011	104	0.1
%3	2	182	150	2.011	106.3	0.459999999999999
%3	7	187	150	2.009	105.5	-0.159999999999999
%3	12	192	150	2.01	107	0.3
%3	17	197	150	2.009	106.5	-0.1
3	22	202	150	2.009	106.4	-0.0199999999999989
3	27	207	150	2.011	106.6	0.0399999999999977
%3	30	210	400	2.011	111	1.46666666666667
%3	35	215	400	2.011	114.9	0.780000000000001
%3	40	220	400	2.012	115.2	0.0599999999999994
%3	50	230	400	2.01	117.8	0.259999999999999
%3	55	235	400	2.01	118.3	0.1
%4	0	240	400	2.009	118.5	0.0400000000000006
%4	5	245	400	2.009	118.7	0.0400000000000006
%4	10	250	400	2.008	117.1	-0.320000000000002
%4	15	255	400	2.008	118	0.180000000000001
4	20	260	400	2.008	116.7	-0.259999999999999
4	25	265	400	2.007	116.6	-0.0200000000000017
%4	27	267	900	2.011	119	1.2
%4	32	272	900	2.011	123.7	0.940000000000001
%4	37	277	900	2.01	124.7	0.2
%4	42	282	900	2.011	126.2	0.3
%4	47	287	900	2.011	126.1	-0.0200000000000017
4	52	292	900	2.01	126.3	0.0400000000000006
4	57	297	900	2.011	126.2	-0.0199999999999989
%5	0	300	1900	2.018	131.8	1.86666666666667
%5	5	305	1900	2.017	134.3	0.5
%5	10	310	1900	2.018	135.6	0.259999999999997
%5	15	315	1900	2.018	134.7	-0.180000000000001
%5	20	320	1900	2.018	135.4	0.140000000000003
%5	25	325	1900	2.019	135	-0.0800000000000011
%5	30	330	1900	2.018	136.4	0.280000000000001
5	35	335	1900	2.018	136.5	0.0199999999999989
5	40	340	1900	2.018	135.5	-0.2
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	6.097	57.3	
%0	5	5	0	6.051	80.8	4.7
%0	10	10	0	6.071	83.8	0.6
%0	15	15	0	6.093	87.7	0.780000000000001
%0	20	20	0	6.101	87.7	0
0	25	25	0	6.079	87.8	0.0199999999999989
0	30	30	0	6.095	87.5	-0.0599999999999994
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
paramlinear=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -6.04294 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 23:22:31.407 NotebookApp] Saving file at /KNO3_pH6_1uMCuT.ipynb
[I 23:29:36.910 NotebookApp] 302 GET /lab/ (172.24.0.1) 0.990000ms
[I 02:47:59.298 NotebookApp] Starting buffering for 501c1611-0792-428b-aec5-598ef5cf05cd:a56719f6-e501-43ee-8e5b-496834fddb95
[I 02:47:59.299 NotebookApp] Starting buffering for 7c3981ad-5a7c-4d29-a312-81b6a13e5d7a:16e61b19-d320-40b2-84a9-9fcbd1d4c8af
[I 02:47:59.300 NotebookApp] Starting buffering for 796ba640-abe1-49e7-a4ab-c2536ef9ec41:cdc81e5f-8806-4dc5-8abd-6cff60c2d441
[I 15:20:45.286 NotebookApp] 301 GET /static/favicons/favicon.ico (172.24.0.1) 7.200000ms
[I 2023-08-24 15:20:48.502 LabApp] Build is up to date
[I 15:20:49.228 NotebookApp] 301 GET /static/favicons/favicon-busy-1.ico (172.24.0.1) 5.380000ms
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	35	35	0	2.06	88.3	0.159999999999999
%0	40	40	0	2.053	88.3	0
%0	45	45	0	2.056	89.2	0.180000000000001
%0	50	50	0	2.055	88.9	-0.0599999999999994
%0	55	55	0	2.056	89.2	0.0599999999999994
%1	0	60	0	2.056	91	0.359999999999999
1	18	78	0	2.056	87.5	-0.194444444444444
%1	19	79	50	2.058	87.4	-0.0999999999999943
%1	25	85	50	2.054	93.1	0.949999999999998
%1	30	90	50	2.057	96.3	0.640000000000001
%1	35	95	50	2.054	94.7	-0.319999999999999
%1	40	100	50	2.056	97	0.459999999999999
%1	45	105	50	2.052	97.6	0.119999999999999
%1	55	115	50	2.049	97.4	-0.0199999999999989
%2	0	120	50	2.053	98	0.119999999999999
%2	5	125	50	2.053	99.4	0.280000000000001
%2	10	130	50	2.044	98.4	-0.2
%2	15	135	50	2.045	97.6	-0.160000000000002
2	20	140	50	2.042	97.4	-0.0399999999999977
2	25	145	50	2.018	97.7	0.0599999999999994
%2	30	147	150	2.019	98.2	0.25
%2	32	152	150	2.016	103	0.959999999999999
%2	37	157	150	2.018	104	0.2
%2	42	162	150	2.015	105.1	0.219999999999999
%2	47	167	150	2.014	104.5	-0.119999999999999
%2	52	172	150	2.014	103.5	-0.2
%2	57	177	150	2.011	104	0.1
%3	2	182	150	2.011	106.3	0.459999999999999
%3	7	187	150	2.009	105.5	-0.159999999999999
%3	12	192	150	2.01	107	0.3
%3	17	197	150	2.009	106.5	-0.1
3	22	202	150	2.009	106.4	-0.0199999999999989
3	27	207	150	2.011	106.6	0.0399999999999977
%3	30	210	400	2.011	111	1.46666666666667
%3	35	215	400	2.011	114.9	0.780000000000001
%3	40	220	400	2.012	115.2	0.0599999999999994
%3	50	230	400	2.01	117.8	0.259999999999999
%3	55	235	400	2.01	118.3	0.1
%4	0	240	400	2.009	118.5	0.0400000000000006
%4	5	245	400	2.009	118.7	0.0400000000000006
%4	10	250	400	2.008	117.1	-0.320000000000002
%4	15	255	400	2.008	118	0.180000000000001
4	20	260	400	2.008	116.7	-0.259999999999999
4	25	265	400	2.007	116.6	-0.0200000000000017
%4	27	267	900	2.011	119	1.2
%4	32	272	900	2.011	123.7	0.940000000000001
%4	37	277	900	2.01	124.7	0.2
%4	42	282	900	2.011	126.2	0.3
%4	47	287	900	2.011	126.1	-0.0200000000000017
4	52	292	900	2.01	126.3	0.0400000000000006
4	57	297	900	2.011	126.2	-0.0199999999999989
%5	0	300	1900	2.018	131.8	1.86666666666667
%5	5	305	1900	2.017	134.3	0.5
%5	10	310	1900	2.018	135.6	0.259999999999997
%5	15	315	1900	2.018	134.7	-0.180000000000001
%5	20	320	1900	2.018	135.4	0.140000000000003
%5	25	325	1900	2.019	135	-0.0800000000000011
%5	30	330	1900	2.018	136.4	0.280000000000001
5	35	335	1900	2.018	136.5	0.0199999999999989
5	40	340	1900	2.018	135.5	-0.2
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	6.097	57.3	
%0	5	5	0	6.051	80.8	4.7
%0	10	10	0	6.071	83.8	0.6
%0	15	15	0	6.093	87.7	0.780000000000001
%0	20	20	0	6.101	87.7	0
0	25	25	0	6.079	87.8	0.0199999999999989
0	30	30	0	6.095	87.5	-0.0599999999999994
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-6; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
paramlinear=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-12:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'r--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'m--'); hold on
plot([log10(CuwithCuOs) log10(CuwithCuOs)],[-100 150],'g--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,40,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: -2
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -6.04294 50 0.253456 35.7873

list
string: Total Cu
 -5.91521 40 0.230415 26.2927

[I 15:21:32.754 NotebookApp] Creating new notebook in 
[I 15:21:38.140 NotebookApp] Kernel started: 5ce91f72-d68a-4c5b-bd4d-7094adc4672c, name: xoctave
OpenGL vendor: VMware, Inc.
OpenGL renderer: llvmpipe (LLVM 10.0.0, 128 bits)
OpenGL version: 3.1 Mesa 20.0.8
Run with XEUS 3.0.5
[W 15:21:38.989 NotebookApp] Got events for closed stream <zmq.eventloop.zmqstream.ZMQStream object at 0x7f38a8f03dd0>
[I 15:21:51.919 NotebookApp] Saving file at /Untitled.ipynb
[I 15:21:55.073 NotebookApp] New terminal with automatic name: 1
[I 15:22:38.959 NotebookApp] Starting buffering for 796ba640-abe1-49e7-a4ab-c2536ef9ec41:70bc9fb4-46c0-4c5d-9273-0e123691caa9
[I 15:22:38.961 NotebookApp] Starting buffering for 7c3981ad-5a7c-4d29-a312-81b6a13e5d7a:67bfd48e-1a8d-4f40-a017-345c809df838
[I 15:22:38.961 NotebookApp] Starting buffering for 501c1611-0792-428b-aec5-598ef5cf05cd:b64a8588-60c5-4902-80c7-57124027d96b
[I 15:22:38.963 NotebookApp] Starting buffering for 5ce91f72-d68a-4c5b-bd4d-7094adc4672c:2e507a0e-3880-4449-89c0-1706473785bb
[I 17:30:23.563 NotebookApp] 302 GET / (172.24.0.1) 6.740000ms
[I 20:56:18.694 NotebookApp] 302 GET /lab (172.24.0.1) 10.720000ms
[W 20:56:29.018 NotebookApp] 401 POST /login?next=%2Flab (172.24.0.1) 257.710000ms referer=https://jupyter6.clearnasdss.synology.me/login?next=%2Flab
[I 20:56:34.684 NotebookApp] 302 POST /login?next=%2Flab (172.24.0.1) 149.580000ms
[I 20:56:34.863 NotebookApp] 301 GET /static/favicons/favicon.ico (172.24.0.1) 13.140000ms
[I 2023-09-12 20:56:38.260 LabApp] Build is up to date
[I 20:56:39.559 NotebookApp] 301 GET /static/favicons/favicon-busy-1.ico (172.24.0.1) 5.480000ms
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%1	45	105	0	2.086	75.5	1.62
%1	50	110	0	2.045	76.3	0.159999999999999
%1	55	115	0	2.04	79	0.540000000000001
%2	0	120	0	2.041	79.2	0.0400000000000006
%2	5	125	0	2.039	80.4	0.240000000000001
%2	10	130	0	2.04	82.2	0.359999999999999
%2	15	135	0	2.04	81.7	-0.1
%2	20	140	0	2.038	84	0.459999999999999
%2	25	145	0	2.037	82.9	-0.219999999999999
%2	30	150	0	2.037	83.5	0.119999999999999
%2	35	155	0	2.038	84.8	0.259999999999999
2	40	160	0	2.035	86.1	0.259999999999999
3	0	180	0	2.037	84.6	-0.075
%3	5	185	50	2.037	87.3	0.540000000000001
%3	8	188	50	2.036	91.2	1.3
%3	13	193	50	2.037	92.3	0.219999999999999
%3	18	198	50	2.032	92.8	0.1
%3	23	203	50	2.036	93.7	0.180000000000001
%3	28	208	50	2.035	93.3	-0.0800000000000011
%3	33	213	50	2.036	93.9	0.120000000000002
%3	38	218	50	2.037	95.4	0.3
%3	43	223	50	2.035	95.3	-0.0200000000000017
%3	48	228	50	2.035	96.3	0.2
%3	53	233	50	2.033	98.2	0.380000000000001
%3	58	238	50	2.036	98.2	0
4	3	243	50	2.032	98.2	0
4	8	248	50	2.034	98.6	0.0799999999999983
%4	10	250	150	2.036	100.5	0.950000000000003
%4	15	255	150	2.034	105.2	0.940000000000001
%4	20	260	150	2.036	105.6	0.0799999999999983
%4	25	265	150	2.034	107	0.280000000000001
%4	30	270	150	2.034	108	0.2
%4	35	275	150	2.032	108	0
4	40	280	150	2.032	107.8	-0.0400000000000006
4	45	285	150	2.031	107.7	-0.0199999999999989
%4	50	290	400	2.031	115	1.46
%4	55	295	400	2.031	115.9	0.180000000000001
%5	0	300	400	2.029	116.1	0.0399999999999977
5	5	305	400	2.032	116.5	0.0800000000000011
5	10	310	400	2.029	116	-0.1
%5	15	315	900	2.034	124.8	1.76
%5	20	320	900	2.037	125.3	0.1
%5	25	325	900	2.034	125.4	0.0200000000000017
5	30	330	900	2.037	125.5	0.0199999999999989
5	35	335	900	2.041	132.2	1.34
%5	40	340	1900	2.042	134	0.360000000000002
5	45	345	1900	2.042	133.5	-0.1
5	55	355	1900	2.041	134.2	0.0699999999999989
%6	0	360	3400	2.05	140.8	1.32
%6	5	365	3400	2.051	142.2	0.279999999999996
6	10	370	3400	2.05	140.8	-0.279999999999996
6	15	375	3400	2.054	142.2	0.279999999999996
];

addedCuvol=data(:,4)'*1e-6;

originalsamplemVnpH=[...
%time hr	time min	time total	cumulative  vol added	pH	mvA	delta
%0	0	0	0	5.992	49.4	
%0	5	5	0	6.002	55.7	1.26
%0	10	10	0	6.018	59.4	0.739999999999999
%0	15	15	0	6.033	62.5	0.62
%0	20	20	0	6.046	62.6	0.0200000000000003
%0	25	25	0	6.064	65.4	0.560000000000001
%0	30	30	0	6.054	73	1.52
%1	0	60	0	6.077	70.1	-0.0966666666666669
%1	5	65	0	6.042	67.4	-0.539999999999998
%1	10	70	0	6.064	69.9	0.5
%1	15	75	0	6.077	69.9	0
%1	20	80	0	6.091	68.8	-0.220000000000002
%1	25	85	0	6.019	67.3	-0.3
%1	30	90	0	6.033	67.7	0.0800000000000011
1	35	95	0	6.05	68	0.0599999999999994
1	40	100	0	6.073	67.4	-0.119999999999999
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,5))
mVAoriginal=mean(originalsamplemVnpH(:,6));
mVAoriginal=(originalsamplemVnpH(:,6));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=mean(Emeas(1:2)); Eorig=mean(mVAoriginal); m=paramlinear(1);
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 -40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -7.08003 50 0.329493 27.1984

list
string: Total Cu
 -6.94977 60 0.299539 19.9825

[I 20:57:21.982 NotebookApp] Starting buffering for 5ce91f72-d68a-4c5b-bd4d-7094adc4672c:2c5cacf4-8b41-4ad9-8450-329a4624b49c
[I 20:58:39.224 NotebookApp] Saving file at /KNO3_pH6_0pt1uMCuT.ipynb
[W 21:07:26.128 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT_version2.ipynb?1694552846123 (172.24.0.1): file or directory does not exist: 'KNO3_pH8_0pt1uMCuT_version2.ipynb'
[W 21:07:26.128 NotebookApp] file or directory does not exist: 'KNO3_pH8_0pt1uMCuT_version2.ipynb'
[W 21:07:26.129 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT_version2.ipynb?1694552846123 (172.24.0.1) 2.100000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH8_0pt1uMCuT.ipynb
[W 21:07:26.155 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT_version2.ipynb?content=0&1694552846152 (172.24.0.1): file or directory does not exist: 'KNO3_pH8_0pt1uMCuT_version2.ipynb'
[W 21:07:26.156 NotebookApp] file or directory does not exist: 'KNO3_pH8_0pt1uMCuT_version2.ipynb'
[W 21:07:26.156 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT_version2.ipynb?content=0&1694552846152 (172.24.0.1) 2.260000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH8_0pt1uMCuT.ipynb
[I 21:07:26.164 NotebookApp] Uploading file to /KNO3_pH8_0pt1uMCuT_version2.ipynb
[I 21:07:26.266 NotebookApp] Starting buffering for 5ce91f72-d68a-4c5b-bd4d-7094adc4672c:f153952a-d570-46c2-98d7-7a582bb6a998
[I 21:11:01.002 NotebookApp] Starting buffering for 796ba640-abe1-49e7-a4ab-c2536ef9ec41:d445fd50-ad24-48e2-828d-c5599b373ab1
[I 21:11:01.002 NotebookApp] Starting buffering for 501c1611-0792-428b-aec5-598ef5cf05cd:193b57bd-c4e3-4f0b-a1c3-c4be08f82597
[I 21:11:01.130 NotebookApp] Starting buffering for 7c3981ad-5a7c-4d29-a312-81b6a13e5d7a:acffc7b5-99ff-4e29-81da-4c648e25948f
[I 2023-09-12 21:16:32.591 LabApp] Build is up to date
[I 21:18:32.944 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
[I 21:20:32.989 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
[I 21:22:33.035 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 80
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
%mVAoriginal=mean(originalsamplemVnpH(:,2));
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,6)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 80
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
%mVAoriginal=mean(originalsamplemVnpH(:,2));
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=8.023; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.16346 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 80
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
%mVAoriginal=mean(originalsamplemVnpH(:,2));
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:24:33.085 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
%mVAoriginal=mean(originalsamplemVnpH(:,2));
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
paramlinear=polyfit(log10(CuTplus(3:end)),Emeas(3:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:26:33.137 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:28:33.184 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-paramlinear(2))/paramlinear(1));

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
paramlinear=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-paramlinear(2))/paramlinear(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:30:33.240 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
paramlinear=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1:2)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-paramlinear(2))/paramlinear(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:32:33.295 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
[I 21:34:33.351 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
[I 21:36:33.400 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-paramlinear(2))/paramlinear(1))

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=paramlinear(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1);
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=param(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:38:33.454 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=param(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

[I 21:40:33.515 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'ko','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:42:33.574 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=param(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=param(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:44:12.978 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
[W 21:44:22.134 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT_version3.ipynb?1694555062136 (172.24.0.1): file or directory does not exist: 'KNO3_pH8_0pt1uMCuT_version3.ipynb'
[W 21:44:22.134 NotebookApp] file or directory does not exist: 'KNO3_pH8_0pt1uMCuT_version3.ipynb'
[W 21:44:22.135 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT_version3.ipynb?1694555062136 (172.24.0.1) 2.000000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH8_0pt1uMCuT_version2.ipynb
[W 21:44:22.160 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT_version3.ipynb?content=0&1694555062163 (172.24.0.1): file or directory does not exist: 'KNO3_pH8_0pt1uMCuT_version3.ipynb'
[W 21:44:22.161 NotebookApp] file or directory does not exist: 'KNO3_pH8_0pt1uMCuT_version3.ipynb'
[W 21:44:22.162 NotebookApp] 404 GET /api/contents/KNO3_pH8_0pt1uMCuT_version3.ipynb?content=0&1694555062163 (172.24.0.1) 2.490000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH8_0pt1uMCuT_version2.ipynb
[I 21:44:22.170 NotebookApp] Uploading file to /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 21:44:22.323 NotebookApp] Starting buffering for 5ce91f72-d68a-4c5b-bd4d-7094adc4672c:25e7b8a5-0549-456f-b155-4cbba0a17eac
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=param(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 15.7464

list
string: Total Cu
 -6.94977 60 0.299539 11.5688

[I 21:46:22.235 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=param(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 20.0409

list
string: Total Cu
 -6.94977 60 0.299539 14.7239

[I 21:48:22.295 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=100.7; Eorig=54; m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 20.0409

list
string: Total Cu
 -6.94977 60 0.299539 14.7239

[I 21:50:22.339 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=100.7; Eorig=54; m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 20.0409

list
string: Total Cu
 -6.94977 60 0.299539 14.7239

[I 21:52:22.393 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=100.7; Eorig=54; %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 50 0.329493 20.0409

list
string: Total Cu
 -6.94977 60 0.299539 14.7239

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=100.7; Eorig=54; %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

[I 21:54:22.446 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 21:58:20.635 NotebookApp] 302 GET /lab (172.24.0.1) 1.030000ms
[I 10:39:27.165 NotebookApp] Starting buffering for 7c3981ad-5a7c-4d29-a312-81b6a13e5d7a:cfb9387b-ade1-445d-a820-c5ffaf087e9c
[I 10:39:27.166 NotebookApp] Starting buffering for 796ba640-abe1-49e7-a4ab-c2536ef9ec41:6d0b0737-d1ef-461f-a444-e83777d29289
[I 10:39:27.167 NotebookApp] Starting buffering for 501c1611-0792-428b-aec5-598ef5cf05cd:20be3c9d-cbae-4001-a747-a5032e8bf717
[I 12:38:02.147 NotebookApp] 302 GET /lab (172.24.0.1) 1.060000ms
[I 12:38:08.176 NotebookApp] 302 POST /login?next=%2Flab (172.24.0.1) 153.790000ms
[I 12:38:10.056 NotebookApp] 301 GET /static/favicons/favicon.ico (172.24.0.1) 26.840000ms
[I 2023-09-13 12:38:13.185 LabApp] Build is up to date
[I 12:38:13.966 NotebookApp] 301 GET /static/favicons/favicon-busy-1.ico (172.24.0.1) 1.140000ms
[I 12:38:32.614 NotebookApp] Starting buffering for 501c1611-0792-428b-aec5-598ef5cf05cd:bde4f19f-20b6-4df6-80a5-fad65383e488
[I 12:38:33.613 NotebookApp] Starting buffering for 796ba640-abe1-49e7-a4ab-c2536ef9ec41:39d7a063-7755-41ce-a1eb-de050015591a
[I 12:40:13.722 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVaoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m


param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m


param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=100.7; Eorig=54; %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

[I 12:42:13.839 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m=param(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo=Eacid-(m)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo)/m


param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=100.7; Eorig=54; %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

[I 12:44:13.940 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m=param(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo=Eacid-(m)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo)/m
%determine free Cu using all the calibration points
param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1)
logCufullcalib=(mean(mVAoriginal)-param(2))/param(1)

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=100.7; Eorig=54; %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m=param(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo=Eacid-(m)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo)/m
%determine free Cu using all the calibration points
param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param(2))/param(1)

Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m=param(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo=Eacid-(m)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo)/m
%determine free Cu using all the calibration points
param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param(2))/param(1)
%determine free Cu using high Cu additions (linear part)
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param(2))/param(1)

[I 12:46:14.050 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m=param(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo=Eacid-(m)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo)/m
%determine free Cu using all the calibration points
param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param(2))/param(1)
%determine free Cu using high Cu additions (linear part)
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param(2))/param(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param(2))/param(1)
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m=param(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo=Eacid-(m)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo)/m
%determine free Cu using all the calibration points
param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param(2))/param(1)
%determine free Cu using high Cu additions (linear part)
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param(2))/param(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param=polyfit(log10(CuTplus(1:3)),Emeas(1:3),1);
logCulowslopecalib=(mean(mVAoriginal)-param(2))/param(1)
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m=param(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo=Eacid-(m)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo)/m
%determine free Cu using all the calibration points
param=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param(2))/param(1)
%determine free Cu using high Cu additions (linear part)
param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param(2))/param(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param(2))/param(1)
[I 12:48:14.347 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: display('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
display('model results')
log10(Cunosolid)
log10(Cuall)
[I 12:50:14.446 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: print('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
display('model results')
log10(Cunosolid)
log10(Cuall)
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
display('model results')
log10(Cunosolid)
log10(Cuall)
Executing: disp('various calibration results','fontweight','bold')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
display('model results')
log10(Cunosolid)
log10(Cuall)
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 12:52:14.560 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

[I 12:54:14.650 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

[I 12:56:14.758 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(Emeas) max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(Emeas) max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal) max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal) max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

[I 12:58:14.857 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal) max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal) max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal) max(Emeas)],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.1*min(mVAoriginal) max(Emeas)+0.1*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal) max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal) max(Emeas)],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.13445 50 0.177419 20.0409

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

[I 13:00:15.009 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',180)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -10
list
string: -9
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.83606 47.7505 0.790323 4.49898

list
string: Total Cu
 -6.88065 60 0.16129 14.7239

[I 13:02:16.090 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

Device pixel ratio: 1
Render time: 451930
Encode time: 19177
Send time: 910
Draw time: 572602
[I 13:04:16.202 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 13:06:16.288 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-10 -3 40 180])



Device pixel ratio: 1
Render time: 324568
Encode time: 17470
Send time: 1322
Draw time: 361167
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([min(possible results) max(log10(CuTplus)) min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 375398
Encode time: 16287
Send time: 1127
Draw time: 413013
[I 13:08:16.388 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

%axis([min(possible results) max(log10(CuTplus)) min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 323520
Encode time: 16675
Send time: 882
Draw time: 354122
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([min(possibleresults) max(log10(CuTplus)) min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 321590
Encode time: 16894
Send time: 1126
Draw time: 353989
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 319301
Encode time: 17410
Send time: 1128
Draw time: 357127
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','b')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 343724
Encode time: 16958
Send time: 1070
Draw time: 375872
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 346286
Encode time: 17342
Send time: 3836
Draw time: 384994
[I 13:10:16.489 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 339504
Encode time: 16238
Send time: 3872
Draw time: 374388
[I 13:12:16.591 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')
logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 341327
Encode time: 16401
Send time: 4176
Draw time: 376149
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo=Eacid-(m)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo)/m
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')
logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 338817
Encode time: 17023
Send time: 925
Draw time: 370675
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 13:14:16.665 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo=Eacid-(m)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo)/m
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k-')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k-')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 337480
Encode time: 17694
Send time: 2719
Draw time: 372585
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 372003
Encode time: 18401
Send time: 956
Draw time: 405154
[I 13:16:16.767 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 13:17:03.987 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[Eo1 m1];
logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k-','linewidth',2)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 343922
Encode time: 17345
Send time: 975
Draw time: 379091
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 13:19:04.082 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[Eo1 m1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'k-','linewidth',2)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 349147
Encode time: 19053
Send time: 1102
Draw time: 383033
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[Eo1 m1]
param2
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'k-','linewidth',2)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 343158
Encode time: 18327
Send time: 1147
Draw time: 377657
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1]
param2
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'k-','linewidth',2)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 339375
Encode time: 18851
Send time: 1039
Draw time: 373581
[I 13:21:04.179 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')
log10(CuTplus)

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'k-','linewidth',2)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'k--','linewidth',2)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 344979
Encode time: 19147
Send time: 3059
Draw time: 382538
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'k-','linewidth',2)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'k--','linewidth',2)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 344969
Encode time: 18843
Send time: 3719
Draw time: 387028
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])



Device pixel ratio: 1
Render time: 345901
Encode time: 18867
Send time: 1508
Draw time: 380152
[I 13:23:04.289 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 13:27:04.410 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 13:27:20.781 NotebookApp] Kernel shutdown: 5ce91f72-d68a-4c5b-bd4d-7094adc4672c
terminate called after throwing an instance of 'zmq::error_t'
  what():  Interrupted system call
[W 13:27:20.963 NotebookApp] delete /Untitled.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

Device pixel ratio: 1
Render time: 338696
Encode time: 18514
Send time: 1229
Draw time: 373926
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 13:29:04.505 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 13:31:04.605 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
fun = @(x)100*(x(2) - x(1)^2)^2 + (1 - x(1))^2;
x0 = [-1.2,1];
x = fminsearch(fun,x0,options)

Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
%fun = @(x)100*(x(2) - x(1)^2)^2 + (1 - x(1))^2;
%x0 = [-1.2,1];
%x = fminsearch(fun,x0,options)

Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

Device pixel ratio: 1
Render time: 364288
Encode time: 18962
Send time: 1302
Draw time: 405043
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 13:33:04.705 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 13:49:04.869 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
function f = objectivefcn1(x)
f = 0;
for k = -10:10
    f = f + exp(-(x(1)-x(2))^2 - 2*x(1)^2)*cos(x(2))*sin(2*x(2));
end

Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

Device pixel ratio: 1
Render time: 354938
Encode time: 18881
Send time: 1145
Draw time: 388906
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 13:51:04.965 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 13:53:05.091 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 13:55:05.196 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))/(1+10.^(p(3)-logx)*param(4)));

p=[-100 40 -7 0.7];
logx=-8:1:-3; model=logisticfunction(p,logx);

plot(log10(CuTplus),Emeas,'ko')

Device pixel ratio: 1
Render time: 291492
Encode time: 14956
Send time: 686
Draw time: 321309
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))/(1+10.^(p(3)-logx)*p(4)));

p=[-100 40 -7 0.7];
logx=-8:1:-3; model=logisticfunction(p,logx);

plot(log10(CuTplus),Emeas,'ko')

Device pixel ratio: 1
Render time: 305931
Encode time: 14606
Send time: 617
Draw time: 333955
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));

p=[-100 40 -7 0.7];
logx=-8:1:-3; model=logisticfunction(p,logx);

plot(log10(CuTplus),Emeas,'ko')

Device pixel ratio: 1
Render time: 293434
Encode time: 14024
Send time: 589
Draw time: 321650
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));

p=[-100 40 -7 0.7];
logx=-8:1:-3; model=logisticfunction(p,logx);

plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')

Device pixel ratio: 1
Render time: 322895
Encode time: 15854
Send time: 647
Draw time: 352201
[I 13:57:05.290 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));

p=[100 200 -5 0.7];
logx=-8:1:-3; model=logisticfunction(p,logx);

plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')

Device pixel ratio: 1
Render time: 321020
Encode time: 17249
Send time: 763
Draw time: 352068
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));

p=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(p,logx);

plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')

Device pixel ratio: 1
Render time: 324457
Encode time: 18151
Send time: 989
Draw time: 357832
[I 13:59:05.393 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 14:01:05.503 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 14:03:05.608 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum(Emeas-logisticfunction(p,logx).^2)));
p=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(p,logx);
err=errfunction(p,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')

Device pixel ratio: 1
Render time: 324684
Encode time: 17051
Send time: 701
Draw time: 361972
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
p=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(p,logx);
err=errfunction(p,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')

Device pixel ratio: 1
Render time: 329598
Encode time: 16659
Send time: 1021
Draw time: 361383
[I 14:05:05.710 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','iter','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

Device pixel ratio: 1
Render time: 382188
Encode time: 26443
Send time: 3465
Draw time: 432025
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 14:07:05.833 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV
0 100.7
50 130.3
100 143
250 155.1
500 165
1000 174.2
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

Device pixel ratio: 1
Render time: 344452
Encode time: 19299
Send time: 1280
Draw time: 377930
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 14:09:05.955 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit

plot(logx,model,'k--')


Device pixel ratio: 1
Render time: 368944
Encode time: 19297
Send time: 1338
Draw time: 404542
[I 14:15:06.988 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+0.2;
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')


Device pixel ratio: 1
Render time: 342010
Encode time: 19940
Send time: 1097
Draw time: 377923
[I 14:17:07.164 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+0.2;
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))
Device pixel ratio: 1
Render time: 349522
Encode time: 18946
Send time: 1291
Draw time: 383939
[I 14:19:07.301 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))
Device pixel ratio: 1
Render time: 340368
Encode time: 18843
Send time: 1041
Draw time: 374283
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'g--')

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))
Device pixel ratio: 1
Render time: 343825
Encode time: 19226
Send time: 1636
Draw time: 381418
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))
Device pixel ratio: 1
Render time: 339964
Encode time: 19568
Send time: 1095
Draw time: 375041
[I 14:29:07.497 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 14:31:07.614 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 14:33:07.742 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 14:35:07.862 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 14:51:08.076 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k
function = @(p,x1,x2) (p(1)+p(2)*log10(x1+p(3)*x2));
%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib;
model=function(ptst,CuTplus,H)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k
function = @(p,x1,x2) (p(1)+p(2)*log10(x1+p(3)*x2));
%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib;
model=function(ptst,CuTplus,H)
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

function = @(p,x1,x2) (p(1)+p(2)*log10(x1+p(3)*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[100 59.2/2 1];
model=function(ptst,CuTplus,H)
[I 14:53:08.167 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

function = @(p,x1,x2) (p(1)+p(2)*log10(x1+p(3)*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[100 59.2/2 1];
%model=function(ptst,CuTplus,H)
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

function = NEequn@(p,x1,x2) (p(1)+p(2)*log10(x1+p(3)*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[100 59.2/2 1];
model=NEequn(ptst,CuTplus,H)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

function = NEequn@(p,x1,x2) (p(1)+p(2)*log10(x1+p(3)*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[100 59.2/2 1];
model=NEequn(ptst,CuTplus,H)
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2)*log10(x1+p(3)*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[100 59.2/2 1];
model=NEeqn(ptst,CuTplus,H)
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2)*log10(x1+p(3)*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[100 59.2/2 1];
model=NEeqn(ptst,CuTplus',H')
[I 14:55:08.276 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[100 59.2/2 1];
model=NEeqn(ptst,CuTplus',H')
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib
ptst=[100 59.2/2 1];
model=NEeqn(ptst,CuTplus',H')
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib
ptst=[100 59.2/2 1];
model=NEeqn(ptst,CuTplus',H)
[I 14:57:08.385 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[100 59.2/2 1];
model=NEeqn(ptst,CuTplus',H)

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[100 59.2/2 0.00001];
model=NEeqn(ptst,CuTplus',H);

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: -100
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[-100 59.2/2 0.00000001];
model=NEeqn(ptst,CuTplus',H);

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: -400
list
string: -300
list
string: -200
list
string: -100
list
string: 0
list
string: 100
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[200 59.2/2 0.00000001];
model=NEeqn(ptst,CuTplus',H);

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: -50
list
string: 0
list
string: 50
list
string: 100
list
string: 150
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[300 59.2/2 0.00000001];
model=NEeqn(ptst,CuTplus',H);

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[250 59.2/2 0.00000001];
model=NEeqn(ptst,CuTplus',H);

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[275 59.2/2 0.00000001];
model=NEeqn(ptst,CuTplus',H);

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[275 59.2/2 0.000001];
model=NEeqn(ptst,CuTplus',H);

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));

%errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
[I 14:59:08.504 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbest=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas),ptst,options)
model=NEeqn(pbest,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: -200
list
string: -100
list
string: 0
list
string: 100
list
string: 200
string: 
string: 
[I 15:09:08.701 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas)

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbest=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas),ptst,options)
model=NEeqn(pbest,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: -200
list
string: -100
list
string: 0
list
string: 100
list
string: 200
string: 
string: 
[I 15:11:08.842 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbest=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas),ptst,options)
model=NEeqn(pbest,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: -200
list
string: -100
list
string: 0
list
string: 100
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbest=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
model=NEeqn(pbest,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
[I 15:13:08.985 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 15:15:09.136 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
model=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=10.^((mean(mVoriginal)-pbest2(1))/pbest2(2))-best(3)*H
Device pixel ratio: 1
Render time: 340403
Encode time: 18305
Send time: 1057
Draw time: 374842
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=10.^((mean(mVAoriginal)-pbest2(1))/pbest2(2))-best(3)*H
Device pixel ratio: 1
Render time: 348339
Encode time: 21224
Send time: 1335
Draw time: 384513
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
model=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=10.^((mean(mVAoriginal)-pbest2(1))/pbest2(2))-pbest2(3)*H
Device pixel ratio: 1
Render time: 342362
Encode time: 18968
Send time: 1049
Draw time: 376295
[I 15:17:09.299 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
model=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=10.^((mean(mVAoriginal)-pbestNE(1))/pbestNE(2))-pbestNE(3)*H
Device pixel ratio: 1
Render time: 342669
Encode time: 19208
Send time: 1071
Draw time: 382144
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
model=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))/pbestNE(2))-pbestNE(3)*H)
Device pixel ratio: 1
Render time: 341322
Encode time: 19899
Send time: 1050
Draw time: 376868
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; H=0.01; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))/pbestNE(2))-pbestNE(3)*H)
Device pixel ratio: 1
Render time: 346644
Encode time: 19413
Send time: 1287
Draw time: 381318
[I 15:19:09.455 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
model=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H
Device pixel ratio: 1
Render time: 341746
Encode time: 19263
Send time: 1132
Draw time: 375923
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
model=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; H=0.01; logCuNE=10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H
Device pixel ratio: 1
Render time: 340085
Encode time: 18802
Send time: 1051
Draw time: 374087
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
model=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)
Device pixel ratio: 1
Render time: 343466
Encode time: 18915
Send time: 1093
Draw time: 378040
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
Device pixel ratio: 1
Render time: 342069
Encode time: 18999
Send time: 1102
Draw time: 376191
[I 15:21:09.626 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),model,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 344682
Encode time: 19823
Send time: 1115
Draw time: 378398
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 342501
Encode time: 19377
Send time: 1142
Draw time: 376938
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 342009
Encode time: 27892
Send time: 4660
Draw time: 389600
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 15:23:09.814 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 344413
Encode time: 18953
Send time: 1352
Draw time: 383061
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 347409
Encode time: 19138
Send time: 3213
Draw time: 382811
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 15:27:10.002 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version3.ipynb
[W 15:28:23.439 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_allcalibs.ipynb?1694618903431 (172.24.0.1): file or directory does not exist: 'pH8_0pt1uMCuT_allcalibs.ipynb'
[W 15:28:23.439 NotebookApp] file or directory does not exist: 'pH8_0pt1uMCuT_allcalibs.ipynb'
[W 15:28:23.441 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_allcalibs.ipynb?1694618903431 (172.24.0.1) 3.400000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH8_0pt1uMCuT_version3.ipynb
[W 15:28:23.532 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_allcalibs.ipynb?content=0&1694618903525 (172.24.0.1): file or directory does not exist: 'pH8_0pt1uMCuT_allcalibs.ipynb'
[W 15:28:23.533 NotebookApp] file or directory does not exist: 'pH8_0pt1uMCuT_allcalibs.ipynb'
[W 15:28:23.533 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_allcalibs.ipynb?content=0&1694618903525 (172.24.0.1) 1.950000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/KNO3_pH8_0pt1uMCuT_version3.ipynb
[I 15:28:23.616 NotebookApp] Uploading file to /pH8_0pt1uMCuT_allcalibs.ipynb
[I 15:28:36.622 NotebookApp] Kernel started: 0237b124-d9f6-43a2-bd0e-6206a06f57c6, name: xoctave
OpenGL vendor: VMware, Inc.
OpenGL renderer: llvmpipe (LLVM 10.0.0, 128 bits)
OpenGL version: 3.1 Mesa 20.0.8
Run with XEUS 3.0.5
[I 15:28:40.118 NotebookApp] Kernel started: d23e8dc5-c665-4605-b49b-a16d2d3cd980, name: xoctave
OpenGL vendor: VMware, Inc.
OpenGL renderer: llvmpipe (LLVM 10.0.0, 128 bits)
OpenGL version: 3.1 Mesa 20.0.8
Run with XEUS 3.0.5
[I 15:28:42.860 NotebookApp] Kernel started: 5c5888a8-df10-49ca-91d1-68490fbe86ae, name: xoctave
OpenGL vendor: VMware, Inc.
OpenGL renderer: llvmpipe (LLVM 10.0.0, 128 bits)
OpenGL version: 3.1 Mesa 20.0.8
Run with XEUS 3.0.5
[I 15:28:51.186 NotebookApp] Starting buffering for 0237b124-d9f6-43a2-bd0e-6206a06f57c6:f4a85b13-acbc-4c40-837d-24fc267249c9
[I 15:28:53.035 NotebookApp] Starting buffering for d23e8dc5-c665-4605-b49b-a16d2d3cd980:33d63209-c3a6-48f1-9bca-6a05f8f288ab
[I 15:29:46.234 NotebookApp] Saving file at /pH8_0pt1uMCuT_allcalibs.ipynb
[W 15:30:02.689 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb?1694619002681 (172.24.0.1): file or directory does not exist: 'pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb'
[W 15:30:02.689 NotebookApp] file or directory does not exist: 'pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb'
[W 15:30:02.690 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb?1694619002681 (172.24.0.1) 1.840000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/pH8_0pt1uMCuT_allcalibs.ipynb
[W 15:30:02.790 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb?content=0&1694619002783 (172.24.0.1): file or directory does not exist: 'pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb'
[W 15:30:02.790 NotebookApp] file or directory does not exist: 'pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb'
[W 15:30:02.791 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb?content=0&1694619002783 (172.24.0.1) 2.070000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/pH8_0pt1uMCuT_allcalibs.ipynb
[I 15:30:02.871 NotebookApp] Uploading file to /pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 370693
Encode time: 19692
Send time: 1115
Draw time: 405747
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 15:30:12.412 NotebookApp] Saving file at /pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb
[W 15:30:21.442 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb?1694619021432 (172.24.0.1): file or directory does not exist: 'pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb'
[W 15:30:21.442 NotebookApp] file or directory does not exist: 'pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb'
[W 15:30:21.443 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb?1694619021432 (172.24.0.1) 1.870000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb
[W 15:30:21.538 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb?content=0&1694619021530 (172.24.0.1): file or directory does not exist: 'pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb'
[W 15:30:21.538 NotebookApp] file or directory does not exist: 'pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb'
[W 15:30:21.539 NotebookApp] 404 GET /api/contents/pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb?content=0&1694619021530 (172.24.0.1) 2.110000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb
[I 15:30:21.600 NotebookApp] Uploading file to /pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb
[I 15:32:21.757 NotebookApp] Saving file at /pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 88 2.001
50 107 2.001
100 115.9 1.987
250 125.8 1.99
500 136.6 1.994
1000 146.7 2.002
];

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 339458
Encode time: 20082
Send time: 1142
Draw time: 374489
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 88 2.001
50 107 2.001
100 115.9 1.987
250 125.8 1.99
500 136.6 1.994
1000 146.7 2.002
];

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[80 140 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 346047
Encode time: 20263
Send time: 1477
Draw time: 382739
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[175 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 321429
Encode time: 15512
Send time: 643
Draw time: 350967
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[200 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 319597
Encode time: 16292
Send time: 740
Draw time: 351190
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[210 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 323428
Encode time: 16802
Send time: 1180
Draw time: 355722
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[230 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 322326
Encode time: 16981
Send time: 1107
Draw time: 354277
[I 15:34:21.919 NotebookApp] Saving file at /pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[245 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 327575
Encode time: 16771
Send time: 689
Draw time: 359032
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[245 59.2/2 0.00001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 323375
Encode time: 16281
Send time: 700
Draw time: 353995
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[245 59.2/2 0.001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 322737
Encode time: 18277
Send time: 955
Draw time: 355563
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[245 59.2/2 0.0005];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 321454
Encode time: 16593
Send time: 719
Draw time: 353482
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 88 2.001
50 107 2.001
100 115.9 1.987
250 125.8 1.99
500 136.6 1.994
1000 146.7 2.002
];

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[80 140 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[245 59.2/2 0.0005];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 90
list
string: 100
list
string: 110
list
string: 120
list
string: 130
list
string: 140
list
string: 150
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,50,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 344297
Encode time: 19729
Send time: 1168
Draw time: 379258
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 15:36:22.091 NotebookApp] Saving file at /pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb
[I 15:37:47.501 NotebookApp] Saving file at /pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb
[I 15:39:47.672 NotebookApp] Saving file at /pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 88 2.001
50 107 2.001
100 115.9 1.987
250 125.8 1.99
500 136.6 1.994
1000 146.7 2.002
];

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[80 140 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[245 59.2/2 0.0005];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 90
list
string: 100
list
string: 110
list
string: 120
list
string: 130
list
string: 140
list
string: 150
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-100,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 417444
Encode time: 19565
Send time: 1374
Draw time: 452474
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/2,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 344118
Encode time: 19833
Send time: 1412
Draw time: 379483
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.2,60,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 345782
Encode time: 19977
Send time: 1159
Draw time: 381255
[I 15:41:47.814 NotebookApp] Saving file at /pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 344978
Encode time: 19807
Send time: 1241
Draw time: 380486
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0132067;
Executing: % put in data
data=[...
%volCu mV
0 88
50 107
100 115.9
250 125.8
500 136.6
1000 146.7
];

addedCuvol=data(:,1)'*1e-6;

originalsamplemVnpH=[...
%pH mV
8.045  76.2
8.059  76.9
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
%mest=mVA(3)-mVA(2)
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol)

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

param=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1)
logCuToriginal=(Emeas(1)-param(2))/param(1)
CuToriginal=(10.^logCuToriginal)*63.546*1e6;
logCuoriginal=mean((mVAoriginal-param(2))/param(1))

Executing: % try one point, assume Nernst slope
m=59.2/2; Eacid=115; Eorig=52; m=21.5; m=param(1); %m=24.25;
Eo=Eacid-(m)*log10(CuT);
logCuonept=(Eorig-Eo)/m
Executing: % MODEL FOR COMPARISON

%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8)
log10(CuTplus)

hold on
plot([logCuoriginal'],[mVAoriginal'],'ko')
logCuplot=-13:0.1:-3; Eplot=polyval(param,logCuplot);
plot(logCuplot,Eplot,'k-')
set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[-100 100],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[-100 150],'b--'); hold on
plot([log10(CuT) log10(CuT)],[-100 150],'b--')
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

logCunosolid=log10(Cunosolid)
logCuoriginalsample=mean((mVAoriginal-param(2))/param(1))
logCuonept

axis([-16 -3 40 150])

plot(logCuonept,Eorig,'ro','markerfacecolor','r')

list
string: -16
list
string: -14
list
string: -12
list
string: -10
list
string: -8
list
string: -6
list
string: -4
list
string: 40
list
string: 60
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: log([Cu
superscript
list
string: 2+
string: ])
list
string: Potential (mV)
list
string: model Cu
superscript
list
string: 2+
 -8.21049 129.163 0.329493 15.7464

list
string: Total Cu
 -7.04977 129.163 0.299539 11.5688

[I 15:43:31.537 NotebookApp] Kernel started: f17b8960-2abd-4c08-9f35-1ca74380af46, name: xoctave
OpenGL vendor: VMware, Inc.
OpenGL renderer: llvmpipe (LLVM 10.0.0, 128 bits)
OpenGL version: 3.1 Mesa 20.0.8
Run with XEUS 3.0.5
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0 100.7 2.001
50 130.3 2.001
100 143 1.987
250 155.1 1.99
500 165 1.994
1000 174.2 2.002
];



originalsamplemVnpH=[...
%pH mV
8.045  54.5
8.059  54
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[100 200 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
list
string: 200
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[275 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 100
list
string: 120
list
string: 140
list
string: 160
list
string: 180
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)

xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 369253
Encode time: 19560
Send time: 1189
Draw time: 405191
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 15:43:47.952 NotebookApp] Saving file at /pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb
[I 15:44:38.148 NotebookApp] Saving file at /pH8_0pt1uMCuT_electrodeB_allcalibs.ipynb
[I 15:44:42.005 NotebookApp] Saving file at /KNO3_pH8_0pt1uMCuT_version2.ipynb
[I 15:44:43.963 NotebookApp] Starting buffering for 5c5888a8-df10-49ca-91d1-68490fbe86ae:0d7e310c-b1c8-4004-8c59-e3ff7152a784
[W 15:44:55.535 NotebookApp] delete /pH8_0pt1uMCuT_allcalibs.ipynb
[I 15:46:03.346 NotebookApp] Kernel started: 1a93caa6-bf72-41d6-9e37-89faa73114ca, name: xoctave
OpenGL vendor: VMware, Inc.
OpenGL renderer: llvmpipe (LLVM 10.0.0, 128 bits)
OpenGL version: 3.1 Mesa 20.0.8
Run with XEUS 3.0.5
[W 15:46:54.168 NotebookApp] 404 GET /api/contents/pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb?1694620014156 (172.24.0.1): file or directory does not exist: 'pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb'
[W 15:46:54.168 NotebookApp] file or directory does not exist: 'pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb'
[W 15:46:54.169 NotebookApp] 404 GET /api/contents/pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb?1694620014156 (172.24.0.1) 2.060000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb
[W 15:46:54.254 NotebookApp] 404 GET /api/contents/pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb?content=0&1694620014242 (172.24.0.1): file or directory does not exist: 'pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb'
[W 15:46:54.254 NotebookApp] file or directory does not exist: 'pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb'
[W 15:46:54.255 NotebookApp] 404 GET /api/contents/pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb?content=0&1694620014242 (172.24.0.1) 2.170000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/pH8_0pt1uMCuT_electrodeA_allcalibs.ipynb
[I 15:46:54.314 NotebookApp] Uploading file to /pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
[I 15:47:09.041 NotebookApp] Starting buffering for f17b8960-2abd-4c08-9f35-1ca74380af46:cbeabd71-21ce-4057-b99a-b934f222e6c6
[I 15:48:54.442 NotebookApp] Saving file at /pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0  97.9 2.001
50 108.8 2.021
100  118.4 2.018
250 127.4  2.019
500 137.3 2.023
1000 145.9 2.028
];

originalsamplemVnpH=[...
%pH mV
9.697 -17
9.709 -17.3
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[80 140 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 80
list
string: 90
list
string: 100
list
string: 110
list
string: 120
list
string: 130
list
string: 140
list
string: 150
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[245 59.2/2 0.0005];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 80
list
string: 90
list
string: 100
list
string: 110
list
string: 120
list
string: 130
list
string: 140
list
string: 150
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 400932
Encode time: 18867
Send time: 1028
Draw time: 437467
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 15:50:54.599 NotebookApp] Saving file at /pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[95 160 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
Device pixel ratio: 1
Render time: 325201
Encode time: 17392
Send time: 814
Draw time: 359863
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[250 59.2/2 0.001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 325965
Encode time: 16142
Send time: 730
Draw time: 357343
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[250 59.2/2 0.0001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 322155
Encode time: 16106
Send time: 764
Draw time: 351935
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[250 59.2/2 0.001];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 320494
Encode time: 17659
Send time: 748
Draw time: 352519
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[250 59.2/2 0.0004];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 320112
Encode time: 17514
Send time: 1676
Draw time: 354704
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[250 59.2/2 0.0006];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
Device pixel ratio: 1
Render time: 320659
Encode time: 16958
Send time: 691
Draw time: 357590
Executing: % setup environment
% set path to equilibrium solver
txt=pwd;
n=length(txt);
rootpath=txt; %txt(1:n-8);
PHREEQCpath=[rootpath,'/runPHREEQC'];
addpath(PHREEQCpath);
JEQUILIBpath=[rootpath,'/JEQUILIB']; addpath(JEQUILIBpath);
Cumodelspath=[rootpath,'/Cutableaus']; addpath(Cumodelspath);
% clear data and number format
clear; format short e
% turn off warnings
warning off
graphics_toolkit ("notebook"); 
graphics_toolkit ("plotly"); 
Executing: % put in constants
VT=0.05; %total volume
stockCuconc=0.0152067;
Executing: % put in data
data=[...
%volCu mV pH
0  97.9 2.001
50 108.8 2.021
100  118.4 2.018
250 127.4  2.019
500 137.3 2.023
1000 145.9 2.028
];

originalsamplemVnpH=[...
%pH mV
9.697 -17
9.709 -17.3
];
Executing: % process the data
pH=mean(originalsamplemVnpH(:,1))
mVAoriginal=(originalsamplemVnpH(:,2));
addedCuvol=data(:,1)'*1e-6;
pHcalib=data(:,3);

mVA=data(:,2)'; Emeas=mVA; CuTmeas=1e-7; CuT=CuTmeas;
CuTplus=(CuTmeas*(VT)+addedCuvol*stockCuconc)./(VT+addedCuvol);

%chlorocorrecxtion
%BF1=2.49; BF2=1.14; BF3=0.9; ClT=4.9904e-4; %from Inorg. Chem. 1983. 22. 3323-3326.
%CuTplus=CuTplus./(1+BF1*ClT+BF2*ClT^2+BF3*ClT^3);

%determine free Cu for the sample using the method of Tait et al.
m1=59.2/2; Eacid=Emeas(1); Eorig=mean(mVAoriginal); %m=param(1); 
Eo1=Eacid-(m1)*log10(CuT);
logCuonept=(Eorig-Eo1)/m1
%determine free Cu for the sample using the method of Tait et al. but use measured slope
param1=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1); m2=param1(1);
Eacid=Emeas(1); Eorig=mean(mVAoriginal); 
Eo2=Eacid-(m2)*log10(CuT);
logCuoneptmeasuredslope=(Eorig-Eo2)/m2
%determine free Cu using all the calibration points
param2=polyfit(log10(CuTplus(1:end)),Emeas(1:end),1);
logCufullcalib=(mean(mVAoriginal)-param2(2))/param2(1)
%determine free Cu using high Cu additions (linear part)
param3=polyfit(log10(CuTplus(2:end)),Emeas(2:end),1);
logCulinearcalib=(mean(mVAoriginal)-param3(2))/param3(1)
%determine free Cu using two lowest points.  variable slope method like Marcinek et al.
param4=polyfit(log10(CuTplus(1:2)),Emeas(1:2),1);
logCulowslopecalib=(mean(mVAoriginal)-param4(2))/param4(1)

%use logisticmodel
logisticfunction = @(p,logx) (p(1)+(p(2)-p(1))./(1+10.^(p(3)-logx)*p(4)));
errfunction=@(p,logx,Emeas) (log10(sum((Emeas-logisticfunction(p,logx)).^2)));
ptst=[95 160 -4 0.7];
logx=-8:0.1:-3; model=logisticfunction(ptst,logx);
err=errfunction(ptst,log10(CuTplus),Emeas)
plot(log10(CuTplus),Emeas,'ko')
hold on
plot(logx,model,'k-')
% now best fit
options = optimset('Display','off','TolFun',1e-4,'TolX',1e-4);
pbest=fminsearch(@(p) errfunction(p,log10(CuTplus),Emeas),ptst,options)
model=logisticfunction(pbest,logx);
plot(logx,model,'k--')
list
string: -8
list
string: -7
list
string: -6
list
string: -5
list
string: -4
list
string: -3
list
string: 90
list
string: 100
list
string: 110
list
string: 120
list
string: 130
list
string: 140
list
string: 150
list
string: 160
string: 
string: 
Executing: % fit using Nikolskii-Eisenman equation
%E=E0+Slog(Cu +kH); parameters E0, S, k

NEeqn=@(p,x1,x2) (p(1)+p(2).*log10(x1+p(3).*x2));
errfunction=@(p,x1,x2,Emeas) (log10(sum((Emeas-NEeqn(p,x1,x2)).^2)));


H=10.^-pHcalib; ptst=[250 59.2/2 0.0006];
model=NEeqn(ptst,CuTplus',H);
err=errfunction(ptst,CuTplus',H,Emeas')

plot(log10(CuTplus), Emeas,'ko')
hold on; plot(log10(CuTplus),model,'k-')


% now best fit
pbestNE=fminsearch(@(p) errfunction(p,CuTplus',H,Emeas'),ptst,options)
NEmodel=NEeqn(pbestNE,CuTplus',H);
plot(log10(CuTplus),model,'k--')
list
string: -7
list
string: -6.5
list
string: -6
list
string: -5.5
list
string: -5
list
string: -4.5
list
string: -4
list
string: -3.5
list
string: 90
list
string: 100
list
string: 110
list
string: 120
list
string: 130
list
string: 140
list
string: 150
string: 
string: 
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(possibleresults)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 341249
Encode time: 17837
Send time: 949
Draw time: 373821
Executing: disp('various calibration results')
logCuonept
logCuoneptmeasuredslope
logCufullcalib
logCulinearcalib
logCulowslopecalib
logCuNE
disp('model results')
log10(Cunosolid)
log10(Cuall)
[I 15:52:54.756 NotebookApp] Saving file at /pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
[I 15:54:54.895 NotebookApp] Saving file at /pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(log10([Cunosolid Cuall)-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 343544
Encode time: 16856
Send time: 1652
Draw time: 375753
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(log10([Cunosolid Cuall]))-0.2 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 337760
Encode time: 20024
Send time: 1359
Draw time: 372465
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(log10([Cunosolid Cuall]))-1 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 347649
Encode time: 20385
Send time: 1161
Draw time: 384550
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(log10([Cunosolid Cuall]))-1 max(log10(CuTplus))+0.2 min(mVAoriginal)-0.5*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 342163
Encode time: 19924
Send time: 1159
Draw time: 377212
[I 15:56:55.045 NotebookApp] Saving file at /pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
[I 16:00:55.207 NotebookApp] Saving file at /pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-0.2*min(mVAoriginal) max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(log10([Cunosolid Cuall]))-1 max(log10(CuTplus))+0.2 min(mVAoriginal)-(max(Emeas)-mean(mVAoriginal))/4 max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 346804
Encode time: 20268
Send time: 1096
Draw time: 382631
Executing: % MODEL FOR COMPARISON
graphics_toolkit("notebook")
%model with just inorganic speciation
%geochemical model
% input the constants and solution chemistry

flag1=2; %flag1 for concentration based search vector (1) or for log based search vector (2).
flag2=1; %flag2 for numerical derivatives (2) or analtyical derivatives (1)
database=[]; 
flag3=0; % flag3 1 for show warnings. 0 no warnings
flag4=0; %if=1 solve tableau one line at a time to get a good initial guess (no solids). really challenging probs only
flag5=0; %if=1 use stored initial guess for including solids

CuT=CuTmeas; inorganicTOTALS=[CuT];
inorganicTOTALS(inorganicTOTALS==0)=1e-16; % get rid of zero values, b/c div by zero error
TOTALS=[inorganicTOTALS]; %TOTALS=inorganicTOTALS;
pH=pH; pe=20.75-pH; PCO2=10^-3.5;
[Cuall,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauallsolids(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[CuwithCuOs,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableauCuOs(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);
[Cunosolid,CuOH,CuOH2s,CuOs,CuCO3s,tenorite,malachite,MASSERR]=CuOHCO2opentableaunosolid(pH,pe,PCO2,TOTALS',flag1,flag2,flag3,flag4,flag5,database);

plot(log10(CuTplus),Emeas,'bo','markersize',8,'markerfacecolor','b')

hold on
possibleresults=[logCuonept logCuoneptmeasuredslope logCufullcalib logCulinearcalib logCulowslopecalib];
mVAoriginals=mean(mVAoriginal)*ones(size(possibleresults));
plot(possibleresults,mVAoriginals,'ko','markerfacecolor','w')

paramTait=[m1 Eo1];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait,logCuplot);
plot(logCuplot,Eplot,'r-','linewidth',1)

paramTait2=[m2 Eo2];
logCuplot=-13:0.1:-3; Eplot=polyval(paramTait2,logCuplot);
plot(logCuplot,Eplot,'r--','linewidth',1)

logCuplot=-13:0.1:-3; Eplot=polyval(param2,logCuplot);
plot(logCuplot,Eplot,'k--')

logCuplot=-13:0.1:-3; Eplot=polyval(param3,logCuplot);
plot(logCuplot,Eplot,'k:')

logCuplot=-13:0.1:-3; Eplot=polyval(param4,logCuplot);
plot(logCuplot,Eplot,'k-')

set(gca,'linewidth',2)
xlabel('log[Cu^{2+}]'); ylabel('E (mV)')
hold on

plot([log10(Cuall) log10(Cuall)],[min(mVAoriginal)-(max(Emeas)-mean(mVAoriginal))/4 max(Emeas)+0.2*max(Emeas)],'b--')
plot([log10(Cunosolid) log10(Cunosolid)],[min(mVAoriginal)-(max(Emeas)-mean(mVAoriginal))/4 max(Emeas)+0.2*max(Emeas)],'b--'); hold on
plot([log10(CuT) log10(CuT)],[min(mVAoriginal)-(max(Emeas)-mean(mVAoriginal))/4 max(Emeas)+0.2*max(Emeas)],'b--','linewidth',2)
%plot([-9.576 -9.576],[-100 100],'b--')

text(log10(Cunosolid)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'model Cu^{2+}','rotation',90)
text(log10(CuT)+0.1,max(Emeas)-(max(Emeas)-mean(mVAoriginal))/4,'Total Cu','rotation',90)


xlabel('log([Cu^{2+}])')
ylabel('Potential (mV)')
set(gca,'LineWidth',2,'fontsize',12)

axis([min(log10([Cunosolid Cuall]))-1 max(log10(CuTplus))+0.2 min(mVAoriginal)-(max(Emeas)-mean(mVAoriginal))/4 max(Emeas)+0.2*max(Emeas)])

% nonlinear fit
logx=min(possibleresults)-0.2:0.1:max(log10(CuTplus))+1;
model=logisticfunction(pbest,logx);
plot(logx,model,'m--','linewidth',2)

logCunonlinear=-((log10((pbest(2)-pbest(1))/(mean(mVAoriginal)-pbest(1))-1))/pbest(4)-pbest(3))

H=10.^-pH; logCuNE=log10(10.^((mean(mVAoriginal)-pbestNE(1))./pbestNE(2))-pbestNE(3)*H)

plot(logCuNE,mean(mVAoriginal),'ko','markerfacecolor','c')
plot(log10(CuTplus),NEmodel,'c-','linewidth',2)
Device pixel ratio: 1
Render time: 344041
Encode time: 20422
Send time: 1293
Draw time: 379687
[I 16:02:55.352 NotebookApp] Saving file at /pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
[I 16:18:29.010 NotebookApp] Saving file at /pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
[W 16:49:11.634 NotebookApp] 404 GET /api/contents/pH7pt5_NDReffluent_allcalibs.ipynb?1694623751622 (172.24.0.1): file or directory does not exist: 'pH7pt5_NDReffluent_allcalibs.ipynb'
[W 16:49:11.634 NotebookApp] file or directory does not exist: 'pH7pt5_NDReffluent_allcalibs.ipynb'
[W 16:49:11.635 NotebookApp] 404 GET /api/contents/pH7pt5_NDReffluent_allcalibs.ipynb?1694623751622 (172.24.0.1) 1.830000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
[W 16:49:11.729 NotebookApp] 404 GET /api/contents/pH7pt5_NDReffluent_allcalibs.ipynb?content=0&1694623751717 (172.24.0.1): file or directory does not exist: 'pH7pt5_NDReffluent_allcalibs.ipynb'
[W 16:49:11.729 NotebookApp] file or directory does not exist: 'pH7pt5_NDReffluent_allcalibs.ipynb'
[W 16:49:11.729 NotebookApp] 404 GET /api/contents/pH7pt5_NDReffluent_allcalibs.ipynb?content=0&1694623751717 (172.24.0.1) 1.830000ms referer=https://jupyter6.clearnasdss.synology.me/lab/tree/pH10_0pt1uMCuT_electrodeA_allcalibs.ipynb
[I 16:49:11.817 NotebookApp] Uploading file to /pH7pt5_NDReffluent_allcalibs.ipynb
[I 16:51:11.955 NotebookApp] Saving file at /pH7pt5_NDReffluent_allcalibs.ipynb
[I 17:04:47.203 NotebookApp] Starting buffering for 7c3981ad-5a7c-4d29-a312-81b6a13e5d7a:4366615b-53e3-4e56-9c4b-1d7d836ec26e
[I 17:04:55.144 NotebookApp] Kernel shutdown: 7c3981ad-5a7c-4d29-a312-81b6a13e5d7a
terminate called after throwing an instance of 'zmq::error_t'
  what():  Interrupted system call
[W 17:04:55.347 NotebookApp] delete /pH7pt5_NDReffluent_allcalibs.ipynb
[I 17:04:58.698 NotebookApp] Saving file at /KNO3_pH10_0pt1uMCuT.ipynb
[I 17:05:06.551 NotebookApp] New terminal with automatic name: 2
